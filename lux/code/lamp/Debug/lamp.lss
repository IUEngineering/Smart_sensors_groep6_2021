
lamp.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000017f8  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000030  00802000  000017f8  0000188c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          000000d2  00802030  00802030  000018bc  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  000018bc  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001918  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000108  00000000  00000000  00001958  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000530c  00000000  00000000  00001a60  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00003772  00000000  00000000  00006d6c  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000d50  00000000  00000000  0000a4de  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000002d0  00000000  00000000  0000b230  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000037df  00000000  00000000  0000b500  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000990  00000000  00000000  0000ecdf  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000d8  00000000  00000000  0000f66f  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 83 01 	jmp	0x306	; 0x306 <__ctors_end>
       4:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
       8:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
       c:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      10:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      14:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      18:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      1c:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      20:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      24:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      28:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      2c:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      30:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      34:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      38:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      3c:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      40:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      44:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      48:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      4c:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      50:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      54:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      58:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      5c:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      60:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      64:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      68:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      6c:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      70:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      74:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      78:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      7c:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      80:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      84:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      88:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      8c:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      90:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      94:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      98:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      9c:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      a0:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      a4:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      a8:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      ac:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      b0:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      b4:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      b8:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      bc:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      c0:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      c4:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      c8:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      cc:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      d0:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      d4:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      d8:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      dc:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      e0:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      e4:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      e8:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      ec:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      f0:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      f4:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      f8:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      fc:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     100:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     104:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     108:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     10c:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     110:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     114:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     118:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     11c:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     120:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     124:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     128:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     12c:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     130:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     134:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     138:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     13c:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     140:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     144:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     148:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     14c:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     150:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     154:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     158:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     15c:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     160:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     164:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     168:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     16c:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     170:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     174:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     178:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     17c:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     180:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     184:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     188:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     18c:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     190:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     194:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     198:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     19c:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     1a0:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     1a4:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     1a8:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     1ac:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     1b0:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     1b4:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     1b8:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     1bc:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     1c0:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     1c4:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     1c8:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     1cc:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     1d0:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     1d4:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     1d8:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     1dc:	0c 94 e6 03 	jmp	0x7cc	; 0x7cc <__vector_119>
     1e0:	0c 94 0e 04 	jmp	0x81c	; 0x81c <__vector_120>
     1e4:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     1e8:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     1ec:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     1f0:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     1f4:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     1f8:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>

000001fc <__trampolines_start>:
     1fc:	0c 94 c4 02 	jmp	0x588	; 0x588 <uartF0_fputc>
     200:	0c 94 84 02 	jmp	0x508	; 0x508 <uartF0_fgetc>

00000204 <__trampolines_end>:
     204:	6e 61       	ori	r22, 0x1E	; 30
     206:	6e 00       	.word	0x006e	; ????

00000208 <__c.2332>:
     208:	69 6e 66 00 00 40 7a 10 f3 5a 00 a0 72 4e 18 09     inf..@z..Z..rN..
     218:	00 10 a5 d4 e8 00 00 e8 76 48 17 00 00 e4 0b 54     ........vH.....T
     228:	02 00 00 ca 9a 3b 00 00 00 e1 f5 05 00 00 80 96     .....;..........
     238:	98 00 00 00 40 42 0f 00 00 00 a0 86 01 00 00 00     ....@B..........
     248:	10 27 00 00 00 00 e8 03 00 00 00 00 64 00 00 00     .'..........d...
     258:	00 00 0a 00 00 00 00 00 01 00 00 00 00 00 2c 76     ..............,v
     268:	d8 88 dc 67 4f 08 23 df c1 df ae 59 e1 b1 b7 96     ...gO.#....Y....
     278:	e5 e3 e4 53 c6 3a e6 51 99 76 96 e8 e6 c2 84 26     ...S.:.Q.v.....&
     288:	eb 89 8c 9b 62 ed 40 7c 6f fc ef bc 9c 9f 40 f2     ....b.@|o.....@.
     298:	ba a5 6f a5 f4 90 05 5a 2a f7 5c 93 6b 6c f9 67     ..o....Z*.\.kl.g
     2a8:	6d c1 1b fc e0 e4 0d 47 fe f5 20 e6 b5 00 d0 ed     m......G.. .....
     2b8:	90 2e 03 00 94 35 77 05 00 80 84 1e 08 00 00 20     .....5w........ 
     2c8:	4e 0a 00 00 00 c8 0c 33 33 33 33 0f 98 6e 12 83     N......3333..n..
     2d8:	11 41 ef 8d 21 14 89 3b e6 55 16 cf fe e6 db 18     .A..!..;.U......
     2e8:	d1 84 4b 38 1b f7 7c 1d 90 1d a4 bb e4 24 20 32     ..K8..|......$ 2
     2f8:	84 72 5e 22 81 00 c9 f1 24 ec a1 e5 3d 27           .r^"....$...='

00000306 <__ctors_end>:
     306:	11 24       	eor	r1, r1
     308:	1f be       	out	0x3f, r1	; 63
     30a:	cf ef       	ldi	r28, 0xFF	; 255
     30c:	cd bf       	out	0x3d, r28	; 61
     30e:	df e5       	ldi	r29, 0x5F	; 95
     310:	de bf       	out	0x3e, r29	; 62
     312:	00 e0       	ldi	r16, 0x00	; 0
     314:	0c bf       	out	0x3c, r16	; 60

00000316 <__do_copy_data>:
     316:	10 e2       	ldi	r17, 0x20	; 32
     318:	a0 e0       	ldi	r26, 0x00	; 0
     31a:	b0 e2       	ldi	r27, 0x20	; 32
     31c:	e8 ef       	ldi	r30, 0xF8	; 248
     31e:	f7 e1       	ldi	r31, 0x17	; 23
     320:	00 e0       	ldi	r16, 0x00	; 0
     322:	0b bf       	out	0x3b, r16	; 59
     324:	02 c0       	rjmp	.+4      	; 0x32a <__do_copy_data+0x14>
     326:	07 90       	elpm	r0, Z+
     328:	0d 92       	st	X+, r0
     32a:	a0 33       	cpi	r26, 0x30	; 48
     32c:	b1 07       	cpc	r27, r17
     32e:	d9 f7       	brne	.-10     	; 0x326 <__do_copy_data+0x10>

00000330 <__do_clear_bss>:
     330:	21 e2       	ldi	r18, 0x21	; 33
     332:	a0 e3       	ldi	r26, 0x30	; 48
     334:	b0 e2       	ldi	r27, 0x20	; 32
     336:	01 c0       	rjmp	.+2      	; 0x33a <.do_clear_bss_start>

00000338 <.do_clear_bss_loop>:
     338:	1d 92       	st	X+, r1

0000033a <.do_clear_bss_start>:
     33a:	a2 30       	cpi	r26, 0x02	; 2
     33c:	b2 07       	cpc	r27, r18
     33e:	e1 f7       	brne	.-8      	; 0x338 <.do_clear_bss_loop>
     340:	0e 94 f9 01 	call	0x3f2	; 0x3f2 <main>
     344:	0c 94 fa 0b 	jmp	0x17f4	; 0x17f4 <_exit>

00000348 <__bad_interrupt>:
     348:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000034c <Config32MHzClock_Ext16M>:
 *
 * \return void
 */
void Config32MHzClock_Ext16M(void)
{
  OSC.XOSCCTRL = OSC_FRQRANGE_12TO16_gc |                   // Select frequency range
     34c:	e0 e5       	ldi	r30, 0x50	; 80
     34e:	f0 e0       	ldi	r31, 0x00	; 0
     350:	8b ec       	ldi	r24, 0xCB	; 203
     352:	82 83       	std	Z+2, r24	; 0x02
                 OSC_XOSCSEL_XTAL_16KCLK_gc;                // Select start-up time
  OSC.CTRL |= OSC_XOSCEN_bm;                                // Enable oscillator
     354:	80 81       	ld	r24, Z
     356:	88 60       	ori	r24, 0x08	; 8
     358:	80 83       	st	Z, r24
  while ( ! (OSC.STATUS & OSC_XOSCRDY_bm) );                // Wait for oscillator is ready
     35a:	81 81       	ldd	r24, Z+1	; 0x01
     35c:	83 ff       	sbrs	r24, 3
     35e:	fd cf       	rjmp	.-6      	; 0x35a <Config32MHzClock_Ext16M+0xe>

  OSC.PLLCTRL = OSC_PLLSRC_XOSC_gc | (OSC_PLLFAC_gm & 2);   // Select PLL source and multipl. factor
     360:	e0 e5       	ldi	r30, 0x50	; 80
     362:	f0 e0       	ldi	r31, 0x00	; 0
     364:	82 ec       	ldi	r24, 0xC2	; 194
     366:	85 83       	std	Z+5, r24	; 0x05
  OSC.CTRL |= OSC_PLLEN_bm;                                 // Enable PLL
     368:	80 81       	ld	r24, Z
     36a:	80 61       	ori	r24, 0x10	; 16
     36c:	80 83       	st	Z, r24
  while ( ! (OSC.STATUS & OSC_PLLRDY_bm) );                 // Wait for PLL is ready
     36e:	81 81       	ldd	r24, Z+1	; 0x01
     370:	84 ff       	sbrs	r24, 4
     372:	fd cf       	rjmp	.-6      	; 0x36e <Config32MHzClock_Ext16M+0x22>

  CCP = CCP_IOREG_gc;                                       // Security signature to modify clock
     374:	88 ed       	ldi	r24, 0xD8	; 216
     376:	84 bf       	out	0x34, r24	; 52
  CLK.CTRL = CLK_SCLKSEL_PLL_gc;                            // Select system clock source
     378:	84 e0       	ldi	r24, 0x04	; 4
     37a:	80 93 40 00 	sts	0x0040, r24	; 0x800040 <__TEXT_REGION_LENGTH__+0x700040>
  OSC.CTRL &= ~OSC_RC2MEN_bm;                               // Turn off 2MHz internal oscillator
     37e:	e0 e5       	ldi	r30, 0x50	; 80
     380:	f0 e0       	ldi	r31, 0x00	; 0
     382:	80 81       	ld	r24, Z
     384:	8e 7f       	andi	r24, 0xFE	; 254
     386:	80 83       	st	Z, r24
  OSC.CTRL &= ~OSC_RC32MEN_bm;                              // Turn off 32MHz internal oscillator
     388:	80 81       	ld	r24, Z
     38a:	8d 7f       	andi	r24, 0xFD	; 253
     38c:	80 83       	st	Z, r24
     38e:	08 95       	ret

00000390 <init_adc>:
#define VREF        (((double) VCC) / 1.6)

void init_adc(void)
{
{
	PORTA.DIRCLR     = PIN3_bm;                   
     390:	88 e0       	ldi	r24, 0x08	; 8
     392:	80 93 02 06 	sts	0x0602, r24	; 0x800602 <__TEXT_REGION_LENGTH__+0x700602>
	ADCA.CH0.MUXCTRL = ADC_CH_MUXPOS_PIN3_gc | ADC_CH_MUXNEG_GND_MODE4_gc;           
     396:	e0 e0       	ldi	r30, 0x00	; 0
     398:	f2 e0       	ldi	r31, 0x02	; 2
     39a:	8f e1       	ldi	r24, 0x1F	; 31
     39c:	81 a3       	std	Z+33, r24	; 0x21
	ADCA.CH0.CTRL    = ADC_CH_INPUTMODE_DIFFWGAIN_gc | ADC_CH_GAIN_DIV2_gc;            
     39e:	80 a3       	std	Z+32, r24	; 0x20
	ADCA.REFCTRL     = ADC_REFSEL_INTVCC_gc;
     3a0:	80 e1       	ldi	r24, 0x10	; 16
     3a2:	82 83       	std	Z+2, r24	; 0x02
	ADCA.CTRLB       = ADC_RESOLUTION_12BIT_gc | ADC_CONMODE_bm;                      
     3a4:	81 83       	std	Z+1, r24	; 0x01
	ADCA.PRESCALER   = ADC_PRESCALER_DIV32_gc;
     3a6:	83 e0       	ldi	r24, 0x03	; 3
     3a8:	84 83       	std	Z+4, r24	; 0x04
	ADCA.CTRLA       = ADC_ENABLE_bm;
     3aa:	81 e0       	ldi	r24, 0x01	; 1
     3ac:	80 83       	st	Z, r24
     3ae:	08 95       	ret

000003b0 <init_pwm>:

}

void init_pwm(void)
{
	PORTE.DIRSET = PIN0_bm;
     3b0:	81 e0       	ldi	r24, 0x01	; 1
     3b2:	80 93 81 06 	sts	0x0681, r24	; 0x800681 <__TEXT_REGION_LENGTH__+0x700681>

	
	TCE0.CTRLB   = TC0_CCAEN_bm | TC_WGMODE_SINGLESLOPE_gc;
     3b6:	e0 e0       	ldi	r30, 0x00	; 0
     3b8:	fa e0       	ldi	r31, 0x0A	; 10
     3ba:	83 e1       	ldi	r24, 0x13	; 19
     3bc:	81 83       	std	Z+1, r24	; 0x01
	TCE0.CTRLA   = TC_CLKSEL_DIV8_gc;
     3be:	84 e0       	ldi	r24, 0x04	; 4
     3c0:	80 83       	st	Z, r24
	TCE0.PER     = 9999;
     3c2:	8f e0       	ldi	r24, 0x0F	; 15
     3c4:	97 e2       	ldi	r25, 0x27	; 39
     3c6:	86 a3       	std	Z+38, r24	; 0x26
     3c8:	97 a3       	std	Z+39, r25	; 0x27
	TCE0.CCA     = 0;
     3ca:	10 a6       	std	Z+40, r1	; 0x28
     3cc:	11 a6       	std	Z+41, r1	; 0x29
     3ce:	08 95       	ret

000003d0 <read_adc>:

int16_t read_adc(void)                                     
{
	int16_t res;                                             

	ADCA.CH0.CTRL |= ADC_CH_START_bm;
     3d0:	e0 e0       	ldi	r30, 0x00	; 0
     3d2:	f2 e0       	ldi	r31, 0x02	; 2
     3d4:	80 a1       	ldd	r24, Z+32	; 0x20
     3d6:	80 68       	ori	r24, 0x80	; 128
     3d8:	80 a3       	std	Z+32, r24	; 0x20
	while ( !(ADCA.CH0.INTFLAGS & ADC_CH_CHIF_bm) ) ;
     3da:	83 a1       	ldd	r24, Z+35	; 0x23
     3dc:	80 ff       	sbrs	r24, 0
     3de:	fd cf       	rjmp	.-6      	; 0x3da <read_adc+0xa>
	res = ADCA.CH0.RES;
     3e0:	e0 e0       	ldi	r30, 0x00	; 0
     3e2:	f2 e0       	ldi	r31, 0x02	; 2
     3e4:	24 a1       	ldd	r18, Z+36	; 0x24
     3e6:	35 a1       	ldd	r19, Z+37	; 0x25
	ADCA.CH0.INTFLAGS |= ADC_CH_CHIF_bm;
     3e8:	93 a1       	ldd	r25, Z+35	; 0x23
     3ea:	91 60       	ori	r25, 0x01	; 1
     3ec:	93 a3       	std	Z+35, r25	; 0x23

	return res;
}
     3ee:	c9 01       	movw	r24, r18
     3f0:	08 95       	ret

000003f2 <main>:


int main(void)
{	                                        
	init_stream(F_CPU);
     3f2:	60 e0       	ldi	r22, 0x00	; 0
     3f4:	78 e4       	ldi	r23, 0x48	; 72
     3f6:	88 ee       	ldi	r24, 0xE8	; 232
     3f8:	91 e0       	ldi	r25, 0x01	; 1
     3fa:	0e 94 e5 02 	call	0x5ca	; 0x5ca <init_stream>
	sei();
     3fe:	78 94       	sei
	clear_screen();
     400:	8e e0       	ldi	r24, 0x0E	; 14
     402:	90 e2       	ldi	r25, 0x20	; 32
     404:	9f 93       	push	r25
     406:	8f 93       	push	r24
     408:	0e 94 88 0b 	call	0x1710	; 0x1710 <printf>
 *          which has a 16 MHz crystal 
 *
 * \return void
 */
void inline init_clock(void) {
  Config32MHzClock_Ext16M();
     40c:	0e 94 a6 01 	call	0x34c	; 0x34c <Config32MHzClock_Ext16M>
	init_clock();
	init_adc();
     410:	0e 94 c8 01 	call	0x390	; 0x390 <init_adc>
	init_pwm();
     414:	0e 94 d8 01 	call	0x3b0	; 0x3b0 <init_pwm>
	
	int16_t res;  
	double pwm;

	sei();
     418:	78 94       	sei
     41a:	0f 90       	pop	r0
     41c:	0f 90       	pop	r0
			if (pwm < 0){
				pwm = 0;
			} 
			
			
		if(bit_is_clear(PORTE.IN, 0)){
     41e:	08 e8       	ldi	r16, 0x88	; 136
     420:	16 e0       	ldi	r17, 0x06	; 6
		TCE0.CCABUF = (pwm);
     422:	0f 2e       	mov	r0, r31
     424:	81 2c       	mov	r8, r1
     426:	fa e0       	ldi	r31, 0x0A	; 10
     428:	9f 2e       	mov	r9, r31
     42a:	f0 2d       	mov	r31, r0
		
		
				
 
 
		printf("res: %d  pwm: %.1f \n",  res, pwm);
     42c:	0f 2e       	mov	r0, r31
     42e:	fa e1       	ldi	r31, 0x1A	; 26
     430:	ef 2e       	mov	r14, r31
     432:	f0 e2       	ldi	r31, 0x20	; 32
     434:	ff 2e       	mov	r15, r31
     436:	f0 2d       	mov	r31, r0

	sei();

	while (1) {
		
		res = read_adc();
     438:	0e 94 e8 01 	call	0x3d0	; 0x3d0 <read_adc>
     43c:	ec 01       	movw	r28, r24
		pwm = res * 5.95;
     43e:	bc 01       	movw	r22, r24
     440:	99 0f       	add	r25, r25
     442:	88 0b       	sbc	r24, r24
     444:	99 0b       	sbc	r25, r25
     446:	0e 94 54 05 	call	0xaa8	; 0xaa8 <__floatsisf>
     44a:	26 e6       	ldi	r18, 0x66	; 102
     44c:	36 e6       	ldi	r19, 0x66	; 102
     44e:	4e eb       	ldi	r20, 0xBE	; 190
     450:	50 e4       	ldi	r21, 0x40	; 64
     452:	0e 94 04 06 	call	0xc08	; 0xc08 <__mulsf3>
     456:	d6 2e       	mov	r13, r22
     458:	c7 2e       	mov	r12, r23
     45a:	b8 2e       	mov	r11, r24
     45c:	a9 2e       	mov	r10, r25
     45e:	dd 23       	and	r29, r29
     460:	14 f4       	brge	.+4      	; 0x466 <__LOCK_REGION_LENGTH__+0x66>
     462:	c0 e0       	ldi	r28, 0x00	; 0
     464:	d0 e0       	ldi	r29, 0x00	; 0
		
		if (res < 0){
			res = 0;
		}
			if (pwm < 0){
     466:	20 e0       	ldi	r18, 0x00	; 0
     468:	30 e0       	ldi	r19, 0x00	; 0
     46a:	a9 01       	movw	r20, r18
     46c:	0e 94 ac 04 	call	0x958	; 0x958 <__cmpsf2>
     470:	88 23       	and	r24, r24
     472:	24 f4       	brge	.+8      	; 0x47c <__LOCK_REGION_LENGTH__+0x7c>
				pwm = 0;
     474:	d1 2c       	mov	r13, r1
     476:	c1 2c       	mov	r12, r1
     478:	b1 2c       	mov	r11, r1
     47a:	a1 2c       	mov	r10, r1
			} 
			
			
		if(bit_is_clear(PORTE.IN, 0)){
     47c:	f8 01       	movw	r30, r16
     47e:	80 81       	ld	r24, Z
     480:	80 fd       	sbrc	r24, 0
     482:	09 c0       	rjmp	.+18     	; 0x496 <__LOCK_REGION_LENGTH__+0x96>
		TCE0.CCABUF = (pwm);
     484:	6d 2d       	mov	r22, r13
     486:	7c 2d       	mov	r23, r12
     488:	8b 2d       	mov	r24, r11
     48a:	9a 2d       	mov	r25, r10
     48c:	0e 94 23 05 	call	0xa46	; 0xa46 <__fixunssfsi>
     490:	f4 01       	movw	r30, r8
     492:	60 af       	std	Z+56, r22	; 0x38
     494:	71 af       	std	Z+57, r23	; 0x39
		
		
				
 
 
		printf("res: %d  pwm: %.1f \n",  res, pwm);
     496:	af 92       	push	r10
     498:	bf 92       	push	r11
     49a:	cf 92       	push	r12
     49c:	df 92       	push	r13
     49e:	df 93       	push	r29
     4a0:	cf 93       	push	r28
     4a2:	ff 92       	push	r15
     4a4:	ef 92       	push	r14
     4a6:	0e 94 88 0b 	call	0x1710	; 0x1710 <printf>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     4aa:	8f ef       	ldi	r24, 0xFF	; 255
     4ac:	97 e8       	ldi	r25, 0x87	; 135
     4ae:	e3 e1       	ldi	r30, 0x13	; 19
     4b0:	81 50       	subi	r24, 0x01	; 1
     4b2:	90 40       	sbci	r25, 0x00	; 0
     4b4:	e0 40       	sbci	r30, 0x00	; 0
     4b6:	e1 f7       	brne	.-8      	; 0x4b0 <__LOCK_REGION_LENGTH__+0xb0>
     4b8:	00 c0       	rjmp	.+0      	; 0x4ba <__LOCK_REGION_LENGTH__+0xba>
     4ba:	00 00       	nop
     4bc:	8d b7       	in	r24, 0x3d	; 61
     4be:	9e b7       	in	r25, 0x3e	; 62
     4c0:	08 96       	adiw	r24, 0x08	; 8
     4c2:	8d bf       	out	0x3d, r24	; 61
     4c4:	9e bf       	out	0x3e, r25	; 62
     4c6:	b8 cf       	rjmp	.-144    	; 0x438 <__LOCK_REGION_LENGTH__+0x38>

000004c8 <CanRead_F0>:
    }
  }
  *p = '\0';

  return buf;
}
     4c8:	80 91 95 20 	lds	r24, 0x2095	; 0x802095 <rx_f0_wridx>
     4cc:	90 91 94 20 	lds	r25, 0x2094	; 0x802094 <rx_f0_rdidx>
     4d0:	89 17       	cp	r24, r25
     4d2:	10 f0       	brcs	.+4      	; 0x4d8 <CanRead_F0+0x10>
     4d4:	89 1b       	sub	r24, r25
     4d6:	08 95       	ret
     4d8:	8c 59       	subi	r24, 0x9C	; 156
     4da:	89 1b       	sub	r24, r25
     4dc:	08 95       	ret

000004de <ReadByte_F0>:
     4de:	cf 93       	push	r28
     4e0:	c0 91 94 20 	lds	r28, 0x2094	; 0x802094 <rx_f0_rdidx>
     4e4:	0e 94 64 02 	call	0x4c8	; 0x4c8 <CanRead_F0>
     4e8:	88 23       	and	r24, r24
     4ea:	e1 f3       	breq	.-8      	; 0x4e4 <ReadByte_F0+0x6>
     4ec:	ec 2f       	mov	r30, r28
     4ee:	f0 e0       	ldi	r31, 0x00	; 0
     4f0:	e0 5d       	subi	r30, 0xD0	; 208
     4f2:	ff 4d       	sbci	r31, 0xDF	; 223
     4f4:	80 81       	ld	r24, Z
     4f6:	91 e0       	ldi	r25, 0x01	; 1
     4f8:	9c 0f       	add	r25, r28
     4fa:	94 36       	cpi	r25, 0x64	; 100
     4fc:	08 f0       	brcs	.+2      	; 0x500 <ReadByte_F0+0x22>
     4fe:	90 e0       	ldi	r25, 0x00	; 0
     500:	90 93 94 20 	sts	0x2094, r25	; 0x802094 <rx_f0_rdidx>
     504:	cf 91       	pop	r28
     506:	08 95       	ret

00000508 <uartF0_fgetc>:
     508:	0e 94 6f 02 	call	0x4de	; 0x4de <ReadByte_F0>
     50c:	90 e0       	ldi	r25, 0x00	; 0
     50e:	08 95       	ret

00000510 <CanWrite_F0>:
     510:	20 91 fb 20 	lds	r18, 0x20FB	; 0x8020fb <tx_f0_wridx>
     514:	91 e0       	ldi	r25, 0x01	; 1
     516:	92 0f       	add	r25, r18
     518:	80 91 fa 20 	lds	r24, 0x20FA	; 0x8020fa <tx_f0_rdidx>
     51c:	94 36       	cpi	r25, 0x64	; 100
     51e:	10 f0       	brcs	.+4      	; 0x524 <CanWrite_F0+0x14>
     520:	9d e9       	ldi	r25, 0x9D	; 157
     522:	92 0f       	add	r25, r18
     524:	89 17       	cp	r24, r25
     526:	10 f0       	brcs	.+4      	; 0x52c <CanWrite_F0+0x1c>
     528:	89 1b       	sub	r24, r25
     52a:	08 95       	ret
     52c:	8c 59       	subi	r24, 0x9C	; 156
     52e:	89 1b       	sub	r24, r25
     530:	08 95       	ret

00000532 <WriteByte_F0>:
     532:	0f 93       	push	r16
     534:	1f 93       	push	r17
     536:	cf 93       	push	r28
     538:	df 93       	push	r29
     53a:	d8 2f       	mov	r29, r24
     53c:	00 ea       	ldi	r16, 0xA0	; 160
     53e:	1b e0       	ldi	r17, 0x0B	; 11
     540:	c1 e2       	ldi	r28, 0x21	; 33
     542:	02 c0       	rjmp	.+4      	; 0x548 <WriteByte_F0+0x16>
     544:	f8 01       	movw	r30, r16
     546:	c3 83       	std	Z+3, r28	; 0x03
     548:	0e 94 88 02 	call	0x510	; 0x510 <CanWrite_F0>
     54c:	88 23       	and	r24, r24
     54e:	d1 f3       	breq	.-12     	; 0x544 <WriteByte_F0+0x12>
     550:	80 91 fb 20 	lds	r24, 0x20FB	; 0x8020fb <tx_f0_wridx>
     554:	e8 2f       	mov	r30, r24
     556:	f0 e0       	ldi	r31, 0x00	; 0
     558:	ea 56       	subi	r30, 0x6A	; 106
     55a:	ff 4d       	sbci	r31, 0xDF	; 223
     55c:	d0 83       	st	Z, r29
     55e:	8f 5f       	subi	r24, 0xFF	; 255
     560:	84 36       	cpi	r24, 0x64	; 100
     562:	08 f0       	brcs	.+2      	; 0x566 <WriteByte_F0+0x34>
     564:	80 e0       	ldi	r24, 0x00	; 0
     566:	e0 ea       	ldi	r30, 0xA0	; 160
     568:	f0 e0       	ldi	r31, 0x00	; 0
     56a:	92 81       	ldd	r25, Z+2	; 0x02
     56c:	29 2f       	mov	r18, r25
     56e:	2e 7f       	andi	r18, 0xFE	; 254
     570:	22 83       	std	Z+2, r18	; 0x02
     572:	80 93 fb 20 	sts	0x20FB, r24	; 0x8020fb <tx_f0_wridx>
     576:	81 e2       	ldi	r24, 0x21	; 33
     578:	80 93 a3 0b 	sts	0x0BA3, r24	; 0x800ba3 <__TEXT_REGION_LENGTH__+0x700ba3>
     57c:	92 83       	std	Z+2, r25	; 0x02
     57e:	df 91       	pop	r29
     580:	cf 91       	pop	r28
     582:	1f 91       	pop	r17
     584:	0f 91       	pop	r16
     586:	08 95       	ret

00000588 <uartF0_fputc>:
     588:	cf 93       	push	r28
     58a:	df 93       	push	r29
     58c:	d8 2f       	mov	r29, r24
     58e:	cf ef       	ldi	r28, 0xFF	; 255
     590:	03 c0       	rjmp	.+6      	; 0x598 <uartF0_fputc+0x10>
     592:	cc 23       	and	r28, r28
     594:	91 f0       	breq	.+36     	; 0x5ba <uartF0_fputc+0x32>
     596:	c1 50       	subi	r28, 0x01	; 1
     598:	0e 94 88 02 	call	0x510	; 0x510 <CanWrite_F0>
     59c:	88 23       	and	r24, r24
     59e:	c9 f3       	breq	.-14     	; 0x592 <uartF0_fputc+0xa>
     5a0:	cc 23       	and	r28, r28
     5a2:	71 f0       	breq	.+28     	; 0x5c0 <uartF0_fputc+0x38>
     5a4:	da 30       	cpi	r29, 0x0A	; 10
     5a6:	19 f4       	brne	.+6      	; 0x5ae <uartF0_fputc+0x26>
     5a8:	8d e0       	ldi	r24, 0x0D	; 13
     5aa:	0e 94 99 02 	call	0x532	; 0x532 <WriteByte_F0>
     5ae:	8d 2f       	mov	r24, r29
     5b0:	0e 94 99 02 	call	0x532	; 0x532 <WriteByte_F0>
     5b4:	80 e0       	ldi	r24, 0x00	; 0
     5b6:	90 e0       	ldi	r25, 0x00	; 0
     5b8:	05 c0       	rjmp	.+10     	; 0x5c4 <uartF0_fputc+0x3c>
     5ba:	81 e0       	ldi	r24, 0x01	; 1
     5bc:	90 e0       	ldi	r25, 0x00	; 0
     5be:	02 c0       	rjmp	.+4      	; 0x5c4 <uartF0_fputc+0x3c>
     5c0:	81 e0       	ldi	r24, 0x01	; 1
     5c2:	90 e0       	ldi	r25, 0x00	; 0
     5c4:	df 91       	pop	r29
     5c6:	cf 91       	pop	r28
     5c8:	08 95       	ret

000005ca <init_stream>:
 *           If you want to use another baud rate you can change it in this function.
 *
 *  \return  void
 */
void init_stream(uint32_t f_cpu)
{
     5ca:	4f 92       	push	r4
     5cc:	5f 92       	push	r5
     5ce:	6f 92       	push	r6
     5d0:	7f 92       	push	r7
     5d2:	8f 92       	push	r8
     5d4:	9f 92       	push	r9
     5d6:	af 92       	push	r10
     5d8:	bf 92       	push	r11
     5da:	ef 92       	push	r14
     5dc:	ff 92       	push	r15
     5de:	0f 93       	push	r16
     5e0:	1f 93       	push	r17
     5e2:	cf 93       	push	r28
     5e4:	4b 01       	movw	r8, r22
     5e6:	5c 01       	movw	r10, r24
     5e8:	07 e0       	ldi	r16, 0x07	; 7
     5ea:	10 e0       	ldi	r17, 0x00	; 0
static int8_t calc_bscale(uint32_t f_cpu, uint32_t baud, uint8_t clk2x)
{
  int8_t   bscale;
  uint16_t bsel;

  for (bscale = -7; bscale<8; bscale++) {
     5ec:	c9 ef       	ldi	r28, 0xF9	; 249

  factor = factor >> (clk2x & 0x01);
  if ( scale < 0 ) {
    return round(  (((double)(f_cpu)/(factor*(double)(baud))) - 1) * (1<<-(scale))  );
  } else {
    return round(  ((double)(f_cpu)/(factor*(double)(baud))/(1<<(scale))) - 1);
     5ee:	ee 24       	eor	r14, r14
     5f0:	e3 94       	inc	r14
     5f2:	f1 2c       	mov	r15, r1
static uint16_t calc_bsel(uint32_t f_cpu, uint32_t baud, int8_t scale, uint8_t clk2x)
{
  uint8_t factor = 16;

  factor = factor >> (clk2x & 0x01);
  if ( scale < 0 ) {
     5f4:	cc 23       	and	r28, r28
     5f6:	54 f5       	brge	.+84     	; 0x64c <init_stream+0x82>
    return round(  (((double)(f_cpu)/(factor*(double)(baud))) - 1) * (1<<-(scale))  );
     5f8:	c5 01       	movw	r24, r10
     5fa:	b4 01       	movw	r22, r8
     5fc:	0e 94 52 05 	call	0xaa4	; 0xaa4 <__floatunsisf>
     600:	20 e0       	ldi	r18, 0x00	; 0
     602:	30 e0       	ldi	r19, 0x00	; 0
     604:	41 ee       	ldi	r20, 0xE1	; 225
     606:	59 e4       	ldi	r21, 0x49	; 73
     608:	0e 94 b1 04 	call	0x962	; 0x962 <__divsf3>
     60c:	20 e0       	ldi	r18, 0x00	; 0
     60e:	30 e0       	ldi	r19, 0x00	; 0
     610:	40 e8       	ldi	r20, 0x80	; 128
     612:	5f e3       	ldi	r21, 0x3F	; 63
     614:	0e 94 3f 04 	call	0x87e	; 0x87e <__subsf3>
     618:	2b 01       	movw	r4, r22
     61a:	3c 01       	movw	r6, r24
     61c:	b7 01       	movw	r22, r14
     61e:	00 2e       	mov	r0, r16
     620:	02 c0       	rjmp	.+4      	; 0x626 <init_stream+0x5c>
     622:	66 0f       	add	r22, r22
     624:	77 1f       	adc	r23, r23
     626:	0a 94       	dec	r0
     628:	e2 f7       	brpl	.-8      	; 0x622 <init_stream+0x58>
     62a:	07 2e       	mov	r0, r23
     62c:	00 0c       	add	r0, r0
     62e:	88 0b       	sbc	r24, r24
     630:	99 0b       	sbc	r25, r25
     632:	0e 94 54 05 	call	0xaa8	; 0xaa8 <__floatsisf>
     636:	9b 01       	movw	r18, r22
     638:	ac 01       	movw	r20, r24
     63a:	c3 01       	movw	r24, r6
     63c:	b2 01       	movw	r22, r4
     63e:	0e 94 04 06 	call	0xc08	; 0xc08 <__mulsf3>
     642:	0e 94 71 06 	call	0xce2	; 0xce2 <round>
     646:	0e 94 23 05 	call	0xa46	; 0xa46 <__fixunssfsi>
     64a:	2c c0       	rjmp	.+88     	; 0x6a4 <init_stream+0xda>
  } else {
    return round(  ((double)(f_cpu)/(factor*(double)(baud))/(1<<(scale))) - 1);
     64c:	c5 01       	movw	r24, r10
     64e:	b4 01       	movw	r22, r8
     650:	0e 94 52 05 	call	0xaa4	; 0xaa4 <__floatunsisf>
     654:	20 e0       	ldi	r18, 0x00	; 0
     656:	30 e0       	ldi	r19, 0x00	; 0
     658:	41 ee       	ldi	r20, 0xE1	; 225
     65a:	59 e4       	ldi	r21, 0x49	; 73
     65c:	0e 94 b1 04 	call	0x962	; 0x962 <__divsf3>
     660:	2b 01       	movw	r4, r22
     662:	3c 01       	movw	r6, r24
     664:	88 27       	eor	r24, r24
     666:	99 27       	eor	r25, r25
     668:	80 1b       	sub	r24, r16
     66a:	91 0b       	sbc	r25, r17
     66c:	b7 01       	movw	r22, r14
     66e:	02 c0       	rjmp	.+4      	; 0x674 <init_stream+0xaa>
     670:	66 0f       	add	r22, r22
     672:	77 1f       	adc	r23, r23
     674:	8a 95       	dec	r24
     676:	e2 f7       	brpl	.-8      	; 0x670 <init_stream+0xa6>
     678:	07 2e       	mov	r0, r23
     67a:	00 0c       	add	r0, r0
     67c:	88 0b       	sbc	r24, r24
     67e:	99 0b       	sbc	r25, r25
     680:	0e 94 54 05 	call	0xaa8	; 0xaa8 <__floatsisf>
     684:	9b 01       	movw	r18, r22
     686:	ac 01       	movw	r20, r24
     688:	c3 01       	movw	r24, r6
     68a:	b2 01       	movw	r22, r4
     68c:	0e 94 b1 04 	call	0x962	; 0x962 <__divsf3>
     690:	20 e0       	ldi	r18, 0x00	; 0
     692:	30 e0       	ldi	r19, 0x00	; 0
     694:	40 e8       	ldi	r20, 0x80	; 128
     696:	5f e3       	ldi	r21, 0x3F	; 63
     698:	0e 94 3f 04 	call	0x87e	; 0x87e <__subsf3>
     69c:	0e 94 71 06 	call	0xce2	; 0xce2 <round>
     6a0:	0e 94 23 05 	call	0xa46	; 0xa46 <__fixunssfsi>
{
  int8_t   bscale;
  uint16_t bsel;

  for (bscale = -7; bscale<8; bscale++) {
    if ( (bsel = calc_bsel(f_cpu, baud, bscale, clk2x)) < 4096 ) return bscale;
     6a4:	61 15       	cp	r22, r1
     6a6:	70 41       	sbci	r23, 0x10	; 16
     6a8:	38 f0       	brcs	.+14     	; 0x6b8 <init_stream+0xee>
     6aa:	cf 5f       	subi	r28, 0xFF	; 255
     6ac:	01 50       	subi	r16, 0x01	; 1
     6ae:	11 09       	sbc	r17, r1
static int8_t calc_bscale(uint32_t f_cpu, uint32_t baud, uint8_t clk2x)
{
  int8_t   bscale;
  uint16_t bsel;

  for (bscale = -7; bscale<8; bscale++) {
     6b0:	c8 30       	cpi	r28, 0x08	; 8
     6b2:	09 f0       	breq	.+2      	; 0x6b6 <init_stream+0xec>
     6b4:	9f cf       	rjmp	.-194    	; 0x5f4 <init_stream+0x2a>
     6b6:	31 c0       	rjmp	.+98     	; 0x71a <init_stream+0x150>
static uint16_t calc_bsel(uint32_t f_cpu, uint32_t baud, int8_t scale, uint8_t clk2x)
{
  uint8_t factor = 16;

  factor = factor >> (clk2x & 0x01);
  if ( scale < 0 ) {
     6b8:	cc 23       	and	r28, r28
     6ba:	7c f5       	brge	.+94     	; 0x71a <init_stream+0x150>
    return round(  (((double)(f_cpu)/(factor*(double)(baud))) - 1) * (1<<-(scale))  );
     6bc:	c5 01       	movw	r24, r10
     6be:	b4 01       	movw	r22, r8
     6c0:	0e 94 52 05 	call	0xaa4	; 0xaa4 <__floatunsisf>
     6c4:	20 e0       	ldi	r18, 0x00	; 0
     6c6:	30 e0       	ldi	r19, 0x00	; 0
     6c8:	41 ee       	ldi	r20, 0xE1	; 225
     6ca:	59 e4       	ldi	r21, 0x49	; 73
     6cc:	0e 94 b1 04 	call	0x962	; 0x962 <__divsf3>
     6d0:	20 e0       	ldi	r18, 0x00	; 0
     6d2:	30 e0       	ldi	r19, 0x00	; 0
     6d4:	40 e8       	ldi	r20, 0x80	; 128
     6d6:	5f e3       	ldi	r21, 0x3F	; 63
     6d8:	0e 94 3f 04 	call	0x87e	; 0x87e <__subsf3>
     6dc:	4b 01       	movw	r8, r22
     6de:	5c 01       	movw	r10, r24
     6e0:	2c 2f       	mov	r18, r28
     6e2:	33 27       	eor	r19, r19
     6e4:	21 95       	neg	r18
     6e6:	0c f4       	brge	.+2      	; 0x6ea <init_stream+0x120>
     6e8:	30 95       	com	r19
     6ea:	61 e0       	ldi	r22, 0x01	; 1
     6ec:	70 e0       	ldi	r23, 0x00	; 0
     6ee:	02 c0       	rjmp	.+4      	; 0x6f4 <init_stream+0x12a>
     6f0:	66 0f       	add	r22, r22
     6f2:	77 1f       	adc	r23, r23
     6f4:	2a 95       	dec	r18
     6f6:	e2 f7       	brpl	.-8      	; 0x6f0 <init_stream+0x126>
     6f8:	07 2e       	mov	r0, r23
     6fa:	00 0c       	add	r0, r0
     6fc:	88 0b       	sbc	r24, r24
     6fe:	99 0b       	sbc	r25, r25
     700:	0e 94 54 05 	call	0xaa8	; 0xaa8 <__floatsisf>
     704:	9b 01       	movw	r18, r22
     706:	ac 01       	movw	r20, r24
     708:	c5 01       	movw	r24, r10
     70a:	b4 01       	movw	r22, r8
     70c:	0e 94 04 06 	call	0xc08	; 0xc08 <__mulsf3>
     710:	0e 94 71 06 	call	0xce2	; 0xce2 <round>
     714:	0e 94 23 05 	call	0xa46	; 0xa46 <__fixunssfsi>
     718:	2a c0       	rjmp	.+84     	; 0x76e <init_stream+0x1a4>
  } else {
    return round(  ((double)(f_cpu)/(factor*(double)(baud))/(1<<(scale))) - 1);
     71a:	c5 01       	movw	r24, r10
     71c:	b4 01       	movw	r22, r8
     71e:	0e 94 52 05 	call	0xaa4	; 0xaa4 <__floatunsisf>
     722:	20 e0       	ldi	r18, 0x00	; 0
     724:	30 e0       	ldi	r19, 0x00	; 0
     726:	41 ee       	ldi	r20, 0xE1	; 225
     728:	59 e4       	ldi	r21, 0x49	; 73
     72a:	0e 94 b1 04 	call	0x962	; 0x962 <__divsf3>
     72e:	4b 01       	movw	r8, r22
     730:	5c 01       	movw	r10, r24
     732:	61 e0       	ldi	r22, 0x01	; 1
     734:	70 e0       	ldi	r23, 0x00	; 0
     736:	0c 2e       	mov	r0, r28
     738:	02 c0       	rjmp	.+4      	; 0x73e <init_stream+0x174>
     73a:	66 0f       	add	r22, r22
     73c:	77 1f       	adc	r23, r23
     73e:	0a 94       	dec	r0
     740:	e2 f7       	brpl	.-8      	; 0x73a <init_stream+0x170>
     742:	07 2e       	mov	r0, r23
     744:	00 0c       	add	r0, r0
     746:	88 0b       	sbc	r24, r24
     748:	99 0b       	sbc	r25, r25
     74a:	0e 94 54 05 	call	0xaa8	; 0xaa8 <__floatsisf>
     74e:	9b 01       	movw	r18, r22
     750:	ac 01       	movw	r20, r24
     752:	c5 01       	movw	r24, r10
     754:	b4 01       	movw	r22, r8
     756:	0e 94 b1 04 	call	0x962	; 0x962 <__divsf3>
     75a:	20 e0       	ldi	r18, 0x00	; 0
     75c:	30 e0       	ldi	r19, 0x00	; 0
     75e:	40 e8       	ldi	r20, 0x80	; 128
     760:	5f e3       	ldi	r21, 0x3F	; 63
     762:	0e 94 3f 04 	call	0x87e	; 0x87e <__subsf3>
     766:	0e 94 71 06 	call	0xce2	; 0xce2 <round>
     76a:	0e 94 23 05 	call	0xa46	; 0xa46 <__fixunssfsi>
  int8_t bscale;

  bscale = calc_bscale(f_cpu, BAUD_115K2, UART_NO_DOUBLE_CLK);
  bsel   = calc_bsel(f_cpu, BAUD_115K2, bscale, UART_NO_DOUBLE_CLK);

	PORTF.PIN2CTRL = PORT_OPC_PULLUP_gc;  // pullup on rx
     76e:	e0 ea       	ldi	r30, 0xA0	; 160
     770:	f6 e0       	ldi	r31, 0x06	; 6
     772:	88 e1       	ldi	r24, 0x18	; 24
     774:	82 8b       	std	Z+18, r24	; 0x12
	PORTF.OUTSET = PIN3_bm;               // tx high
     776:	98 e0       	ldi	r25, 0x08	; 8
     778:	95 83       	std	Z+5, r25	; 0x05
	PORTF.DIRSET = PIN3_bm;
     77a:	91 83       	std	Z+1, r25	; 0x01
	PORTF.DIRCLR = PIN2_bm;
     77c:	94 e0       	ldi	r25, 0x04	; 4
     77e:	92 83       	std	Z+2, r25	; 0x02

	USARTF0.BAUDCTRLA = (bsel & USART_BSEL_gm);
     780:	e0 ea       	ldi	r30, 0xA0	; 160
     782:	fb e0       	ldi	r31, 0x0B	; 11
     784:	66 83       	std	Z+6, r22	; 0x06
	USARTF0.BAUDCTRLB = ((bscale << USART_BSCALE_gp) & USART_BSCALE_gm) |
     786:	7f 70       	andi	r23, 0x0F	; 15
     788:	c2 95       	swap	r28
     78a:	c0 7f       	andi	r28, 0xF0	; 240
     78c:	c7 2b       	or	r28, r23
     78e:	c7 83       	std	Z+7, r28	; 0x07
                      ((bsel >> 8) & ~USART_BSCALE_gm);
	
 	USARTF0.CTRLB = USART_RXEN_bm | USART_TXEN_bm;
     790:	84 83       	std	Z+4, r24	; 0x04

	USARTF0.CTRLA = USART_RXCINTLVL_MED_gc | 
     792:	80 e2       	ldi	r24, 0x20	; 32
     794:	83 83       	std	Z+3, r24	; 0x03
                  USART_TXCINTLVL_OFF_gc | USART_DREINTLVL_OFF_gc;
	
	PMIC.CTRL |= PMIC_MEDLVLEN_bm | PMIC_LOLVLEN_bm;
     796:	e0 ea       	ldi	r30, 0xA0	; 160
     798:	f0 e0       	ldi	r31, 0x00	; 0
     79a:	82 81       	ldd	r24, Z+2	; 0x02
     79c:	83 60       	ori	r24, 0x03	; 3
     79e:	82 83       	std	Z+2, r24	; 0x02
  stdout = stdin = &uartF0_stdinout;
     7a0:	ec ef       	ldi	r30, 0xFC	; 252
     7a2:	f0 e2       	ldi	r31, 0x20	; 32
     7a4:	80 e0       	ldi	r24, 0x00	; 0
     7a6:	90 e2       	ldi	r25, 0x20	; 32
     7a8:	80 83       	st	Z, r24
     7aa:	91 83       	std	Z+1, r25	; 0x01
     7ac:	82 83       	std	Z+2, r24	; 0x02
     7ae:	93 83       	std	Z+3, r25	; 0x03
	
} // init_stream
     7b0:	cf 91       	pop	r28
     7b2:	1f 91       	pop	r17
     7b4:	0f 91       	pop	r16
     7b6:	ff 90       	pop	r15
     7b8:	ef 90       	pop	r14
     7ba:	bf 90       	pop	r11
     7bc:	af 90       	pop	r10
     7be:	9f 90       	pop	r9
     7c0:	8f 90       	pop	r8
     7c2:	7f 90       	pop	r7
     7c4:	6f 90       	pop	r6
     7c6:	5f 90       	pop	r5
     7c8:	4f 90       	pop	r4
     7ca:	08 95       	ret

000007cc <__vector_119>:
} // WriteByte_F0 

/*  \brief  ISR for receiving bytes from UARTF0.
 *          It puts the received byte in the RX buffer
 */
ISR(USARTF0_RXC_vect) {
     7cc:	1f 92       	push	r1
     7ce:	0f 92       	push	r0
     7d0:	0f b6       	in	r0, 0x3f	; 63
     7d2:	0f 92       	push	r0
     7d4:	11 24       	eor	r1, r1
     7d6:	0b b6       	in	r0, 0x3b	; 59
     7d8:	0f 92       	push	r0
     7da:	8f 93       	push	r24
     7dc:	9f 93       	push	r25
     7de:	ef 93       	push	r30
     7e0:	ff 93       	push	r31
	
	uint8_t curSlot, nextSlot;
	
	curSlot = rx_f0_wridx;
     7e2:	80 91 95 20 	lds	r24, 0x2095	; 0x802095 <rx_f0_wridx>
	rx_f0_buf[curSlot] = USARTF0.DATA;
     7e6:	e8 2f       	mov	r30, r24
     7e8:	f0 e0       	ldi	r31, 0x00	; 0
     7ea:	90 91 a0 0b 	lds	r25, 0x0BA0	; 0x800ba0 <__TEXT_REGION_LENGTH__+0x700ba0>
     7ee:	e0 5d       	subi	r30, 0xD0	; 208
     7f0:	ff 4d       	sbci	r31, 0xDF	; 223
     7f2:	90 83       	st	Z, r25
	
	nextSlot = curSlot + 1;
     7f4:	8f 5f       	subi	r24, 0xFF	; 255
	if(nextSlot >= RXBUF_DEPTH_F0)
     7f6:	84 36       	cpi	r24, 0x64	; 100
     7f8:	08 f0       	brcs	.+2      	; 0x7fc <__vector_119+0x30>
	nextSlot = 0;
     7fa:	80 e0       	ldi	r24, 0x00	; 0
	
	if(nextSlot != rx_f0_rdidx)
     7fc:	90 91 94 20 	lds	r25, 0x2094	; 0x802094 <rx_f0_rdidx>
     800:	89 13       	cpse	r24, r25
	rx_f0_wridx = nextSlot;
     802:	80 93 95 20 	sts	0x2095, r24	; 0x802095 <rx_f0_wridx>
	
} // ISR(USARTF0_RXC_vect)
     806:	ff 91       	pop	r31
     808:	ef 91       	pop	r30
     80a:	9f 91       	pop	r25
     80c:	8f 91       	pop	r24
     80e:	0f 90       	pop	r0
     810:	0b be       	out	0x3b, r0	; 59
     812:	0f 90       	pop	r0
     814:	0f be       	out	0x3f, r0	; 63
     816:	0f 90       	pop	r0
     818:	1f 90       	pop	r1
     81a:	18 95       	reti

0000081c <__vector_120>:


/*  \brief  ISR for transmitting bytes to UARTF0.
 *          If there is a byte to send in the TX buffer, it will be send
 */
ISR(USARTF0_DRE_vect) {
     81c:	1f 92       	push	r1
     81e:	0f 92       	push	r0
     820:	0f b6       	in	r0, 0x3f	; 63
     822:	0f 92       	push	r0
     824:	11 24       	eor	r1, r1
     826:	0b b6       	in	r0, 0x3b	; 59
     828:	0f 92       	push	r0
     82a:	2f 93       	push	r18
     82c:	8f 93       	push	r24
     82e:	9f 93       	push	r25
     830:	ef 93       	push	r30
     832:	ff 93       	push	r31
	
	uint8_t curSlot, nextSlot, lastSlot;
	
	nextSlot = curSlot = tx_f0_rdidx;
     834:	80 91 fa 20 	lds	r24, 0x20FA	; 0x8020fa <tx_f0_rdidx>
	lastSlot = tx_f0_wridx;
     838:	90 91 fb 20 	lds	r25, 0x20FB	; 0x8020fb <tx_f0_wridx>
	
	if(curSlot != lastSlot) {
     83c:	89 17       	cp	r24, r25
     83e:	69 f0       	breq	.+26     	; 0x85a <__vector_120+0x3e>
		USARTF0.DATA = tx_f0_buf[curSlot];
     840:	e8 2f       	mov	r30, r24
     842:	f0 e0       	ldi	r31, 0x00	; 0
     844:	ea 56       	subi	r30, 0x6A	; 106
     846:	ff 4d       	sbci	r31, 0xDF	; 223
     848:	20 81       	ld	r18, Z
     84a:	20 93 a0 0b 	sts	0x0BA0, r18	; 0x800ba0 <__TEXT_REGION_LENGTH__+0x700ba0>
		nextSlot = curSlot + 1;
     84e:	8f 5f       	subi	r24, 0xFF	; 255
		if(nextSlot >= TXBUF_DEPTH_F0)
     850:	84 36       	cpi	r24, 0x64	; 100
     852:	08 f0       	brcs	.+2      	; 0x856 <__vector_120+0x3a>
		nextSlot = 0;
     854:	80 e0       	ldi	r24, 0x00	; 0
	}
	if(nextSlot == lastSlot)
     856:	89 13       	cpse	r24, r25
     858:	04 c0       	rjmp	.+8      	; 0x862 <__vector_120+0x46>
	USARTF0.CTRLA = USART_RXCINTLVL_MED_gc | USART_TXCINTLVL_OFF_gc | USART_DREINTLVL_OFF_gc;
     85a:	80 e2       	ldi	r24, 0x20	; 32
     85c:	80 93 a3 0b 	sts	0x0BA3, r24	; 0x800ba3 <__TEXT_REGION_LENGTH__+0x700ba3>
     860:	89 2f       	mov	r24, r25
	
	tx_f0_rdidx = nextSlot;
     862:	80 93 fa 20 	sts	0x20FA, r24	; 0x8020fa <tx_f0_rdidx>
	
} // ISR(USARTF0_DRE_vect) 
     866:	ff 91       	pop	r31
     868:	ef 91       	pop	r30
     86a:	9f 91       	pop	r25
     86c:	8f 91       	pop	r24
     86e:	2f 91       	pop	r18
     870:	0f 90       	pop	r0
     872:	0b be       	out	0x3b, r0	; 59
     874:	0f 90       	pop	r0
     876:	0f be       	out	0x3f, r0	; 63
     878:	0f 90       	pop	r0
     87a:	1f 90       	pop	r1
     87c:	18 95       	reti

0000087e <__subsf3>:
     87e:	50 58       	subi	r21, 0x80	; 128

00000880 <__addsf3>:
     880:	bb 27       	eor	r27, r27
     882:	aa 27       	eor	r26, r26
     884:	0e 94 57 04 	call	0x8ae	; 0x8ae <__addsf3x>
     888:	0c 94 ca 05 	jmp	0xb94	; 0xb94 <__fp_round>
     88c:	0e 94 bc 05 	call	0xb78	; 0xb78 <__fp_pscA>
     890:	38 f0       	brcs	.+14     	; 0x8a0 <__addsf3+0x20>
     892:	0e 94 c3 05 	call	0xb86	; 0xb86 <__fp_pscB>
     896:	20 f0       	brcs	.+8      	; 0x8a0 <__addsf3+0x20>
     898:	39 f4       	brne	.+14     	; 0x8a8 <__addsf3+0x28>
     89a:	9f 3f       	cpi	r25, 0xFF	; 255
     89c:	19 f4       	brne	.+6      	; 0x8a4 <__addsf3+0x24>
     89e:	26 f4       	brtc	.+8      	; 0x8a8 <__addsf3+0x28>
     8a0:	0c 94 b9 05 	jmp	0xb72	; 0xb72 <__fp_nan>
     8a4:	0e f4       	brtc	.+2      	; 0x8a8 <__addsf3+0x28>
     8a6:	e0 95       	com	r30
     8a8:	e7 fb       	bst	r30, 7
     8aa:	0c 94 b3 05 	jmp	0xb66	; 0xb66 <__fp_inf>

000008ae <__addsf3x>:
     8ae:	e9 2f       	mov	r30, r25
     8b0:	0e 94 db 05 	call	0xbb6	; 0xbb6 <__fp_split3>
     8b4:	58 f3       	brcs	.-42     	; 0x88c <__addsf3+0xc>
     8b6:	ba 17       	cp	r27, r26
     8b8:	62 07       	cpc	r22, r18
     8ba:	73 07       	cpc	r23, r19
     8bc:	84 07       	cpc	r24, r20
     8be:	95 07       	cpc	r25, r21
     8c0:	20 f0       	brcs	.+8      	; 0x8ca <__addsf3x+0x1c>
     8c2:	79 f4       	brne	.+30     	; 0x8e2 <__addsf3x+0x34>
     8c4:	a6 f5       	brtc	.+104    	; 0x92e <__addsf3x+0x80>
     8c6:	0c 94 fd 05 	jmp	0xbfa	; 0xbfa <__fp_zero>
     8ca:	0e f4       	brtc	.+2      	; 0x8ce <__addsf3x+0x20>
     8cc:	e0 95       	com	r30
     8ce:	0b 2e       	mov	r0, r27
     8d0:	ba 2f       	mov	r27, r26
     8d2:	a0 2d       	mov	r26, r0
     8d4:	0b 01       	movw	r0, r22
     8d6:	b9 01       	movw	r22, r18
     8d8:	90 01       	movw	r18, r0
     8da:	0c 01       	movw	r0, r24
     8dc:	ca 01       	movw	r24, r20
     8de:	a0 01       	movw	r20, r0
     8e0:	11 24       	eor	r1, r1
     8e2:	ff 27       	eor	r31, r31
     8e4:	59 1b       	sub	r21, r25
     8e6:	99 f0       	breq	.+38     	; 0x90e <__addsf3x+0x60>
     8e8:	59 3f       	cpi	r21, 0xF9	; 249
     8ea:	50 f4       	brcc	.+20     	; 0x900 <__addsf3x+0x52>
     8ec:	50 3e       	cpi	r21, 0xE0	; 224
     8ee:	68 f1       	brcs	.+90     	; 0x94a <__addsf3x+0x9c>
     8f0:	1a 16       	cp	r1, r26
     8f2:	f0 40       	sbci	r31, 0x00	; 0
     8f4:	a2 2f       	mov	r26, r18
     8f6:	23 2f       	mov	r18, r19
     8f8:	34 2f       	mov	r19, r20
     8fa:	44 27       	eor	r20, r20
     8fc:	58 5f       	subi	r21, 0xF8	; 248
     8fe:	f3 cf       	rjmp	.-26     	; 0x8e6 <__addsf3x+0x38>
     900:	46 95       	lsr	r20
     902:	37 95       	ror	r19
     904:	27 95       	ror	r18
     906:	a7 95       	ror	r26
     908:	f0 40       	sbci	r31, 0x00	; 0
     90a:	53 95       	inc	r21
     90c:	c9 f7       	brne	.-14     	; 0x900 <__addsf3x+0x52>
     90e:	7e f4       	brtc	.+30     	; 0x92e <__addsf3x+0x80>
     910:	1f 16       	cp	r1, r31
     912:	ba 0b       	sbc	r27, r26
     914:	62 0b       	sbc	r22, r18
     916:	73 0b       	sbc	r23, r19
     918:	84 0b       	sbc	r24, r20
     91a:	ba f0       	brmi	.+46     	; 0x94a <__addsf3x+0x9c>
     91c:	91 50       	subi	r25, 0x01	; 1
     91e:	a1 f0       	breq	.+40     	; 0x948 <__addsf3x+0x9a>
     920:	ff 0f       	add	r31, r31
     922:	bb 1f       	adc	r27, r27
     924:	66 1f       	adc	r22, r22
     926:	77 1f       	adc	r23, r23
     928:	88 1f       	adc	r24, r24
     92a:	c2 f7       	brpl	.-16     	; 0x91c <__addsf3x+0x6e>
     92c:	0e c0       	rjmp	.+28     	; 0x94a <__addsf3x+0x9c>
     92e:	ba 0f       	add	r27, r26
     930:	62 1f       	adc	r22, r18
     932:	73 1f       	adc	r23, r19
     934:	84 1f       	adc	r24, r20
     936:	48 f4       	brcc	.+18     	; 0x94a <__addsf3x+0x9c>
     938:	87 95       	ror	r24
     93a:	77 95       	ror	r23
     93c:	67 95       	ror	r22
     93e:	b7 95       	ror	r27
     940:	f7 95       	ror	r31
     942:	9e 3f       	cpi	r25, 0xFE	; 254
     944:	08 f0       	brcs	.+2      	; 0x948 <__addsf3x+0x9a>
     946:	b0 cf       	rjmp	.-160    	; 0x8a8 <__addsf3+0x28>
     948:	93 95       	inc	r25
     94a:	88 0f       	add	r24, r24
     94c:	08 f0       	brcs	.+2      	; 0x950 <__addsf3x+0xa2>
     94e:	99 27       	eor	r25, r25
     950:	ee 0f       	add	r30, r30
     952:	97 95       	ror	r25
     954:	87 95       	ror	r24
     956:	08 95       	ret

00000958 <__cmpsf2>:
     958:	0e 94 8f 05 	call	0xb1e	; 0xb1e <__fp_cmp>
     95c:	08 f4       	brcc	.+2      	; 0x960 <__cmpsf2+0x8>
     95e:	81 e0       	ldi	r24, 0x01	; 1
     960:	08 95       	ret

00000962 <__divsf3>:
     962:	0e 94 c5 04 	call	0x98a	; 0x98a <__divsf3x>
     966:	0c 94 ca 05 	jmp	0xb94	; 0xb94 <__fp_round>
     96a:	0e 94 c3 05 	call	0xb86	; 0xb86 <__fp_pscB>
     96e:	58 f0       	brcs	.+22     	; 0x986 <__divsf3+0x24>
     970:	0e 94 bc 05 	call	0xb78	; 0xb78 <__fp_pscA>
     974:	40 f0       	brcs	.+16     	; 0x986 <__divsf3+0x24>
     976:	29 f4       	brne	.+10     	; 0x982 <__divsf3+0x20>
     978:	5f 3f       	cpi	r21, 0xFF	; 255
     97a:	29 f0       	breq	.+10     	; 0x986 <__divsf3+0x24>
     97c:	0c 94 b3 05 	jmp	0xb66	; 0xb66 <__fp_inf>
     980:	51 11       	cpse	r21, r1
     982:	0c 94 fe 05 	jmp	0xbfc	; 0xbfc <__fp_szero>
     986:	0c 94 b9 05 	jmp	0xb72	; 0xb72 <__fp_nan>

0000098a <__divsf3x>:
     98a:	0e 94 db 05 	call	0xbb6	; 0xbb6 <__fp_split3>
     98e:	68 f3       	brcs	.-38     	; 0x96a <__divsf3+0x8>

00000990 <__divsf3_pse>:
     990:	99 23       	and	r25, r25
     992:	b1 f3       	breq	.-20     	; 0x980 <__divsf3+0x1e>
     994:	55 23       	and	r21, r21
     996:	91 f3       	breq	.-28     	; 0x97c <__divsf3+0x1a>
     998:	95 1b       	sub	r25, r21
     99a:	55 0b       	sbc	r21, r21
     99c:	bb 27       	eor	r27, r27
     99e:	aa 27       	eor	r26, r26
     9a0:	62 17       	cp	r22, r18
     9a2:	73 07       	cpc	r23, r19
     9a4:	84 07       	cpc	r24, r20
     9a6:	38 f0       	brcs	.+14     	; 0x9b6 <__divsf3_pse+0x26>
     9a8:	9f 5f       	subi	r25, 0xFF	; 255
     9aa:	5f 4f       	sbci	r21, 0xFF	; 255
     9ac:	22 0f       	add	r18, r18
     9ae:	33 1f       	adc	r19, r19
     9b0:	44 1f       	adc	r20, r20
     9b2:	aa 1f       	adc	r26, r26
     9b4:	a9 f3       	breq	.-22     	; 0x9a0 <__divsf3_pse+0x10>
     9b6:	35 d0       	rcall	.+106    	; 0xa22 <__divsf3_pse+0x92>
     9b8:	0e 2e       	mov	r0, r30
     9ba:	3a f0       	brmi	.+14     	; 0x9ca <__divsf3_pse+0x3a>
     9bc:	e0 e8       	ldi	r30, 0x80	; 128
     9be:	32 d0       	rcall	.+100    	; 0xa24 <__divsf3_pse+0x94>
     9c0:	91 50       	subi	r25, 0x01	; 1
     9c2:	50 40       	sbci	r21, 0x00	; 0
     9c4:	e6 95       	lsr	r30
     9c6:	00 1c       	adc	r0, r0
     9c8:	ca f7       	brpl	.-14     	; 0x9bc <__divsf3_pse+0x2c>
     9ca:	2b d0       	rcall	.+86     	; 0xa22 <__divsf3_pse+0x92>
     9cc:	fe 2f       	mov	r31, r30
     9ce:	29 d0       	rcall	.+82     	; 0xa22 <__divsf3_pse+0x92>
     9d0:	66 0f       	add	r22, r22
     9d2:	77 1f       	adc	r23, r23
     9d4:	88 1f       	adc	r24, r24
     9d6:	bb 1f       	adc	r27, r27
     9d8:	26 17       	cp	r18, r22
     9da:	37 07       	cpc	r19, r23
     9dc:	48 07       	cpc	r20, r24
     9de:	ab 07       	cpc	r26, r27
     9e0:	b0 e8       	ldi	r27, 0x80	; 128
     9e2:	09 f0       	breq	.+2      	; 0x9e6 <__divsf3_pse+0x56>
     9e4:	bb 0b       	sbc	r27, r27
     9e6:	80 2d       	mov	r24, r0
     9e8:	bf 01       	movw	r22, r30
     9ea:	ff 27       	eor	r31, r31
     9ec:	93 58       	subi	r25, 0x83	; 131
     9ee:	5f 4f       	sbci	r21, 0xFF	; 255
     9f0:	3a f0       	brmi	.+14     	; 0xa00 <__divsf3_pse+0x70>
     9f2:	9e 3f       	cpi	r25, 0xFE	; 254
     9f4:	51 05       	cpc	r21, r1
     9f6:	78 f0       	brcs	.+30     	; 0xa16 <__divsf3_pse+0x86>
     9f8:	0c 94 b3 05 	jmp	0xb66	; 0xb66 <__fp_inf>
     9fc:	0c 94 fe 05 	jmp	0xbfc	; 0xbfc <__fp_szero>
     a00:	5f 3f       	cpi	r21, 0xFF	; 255
     a02:	e4 f3       	brlt	.-8      	; 0x9fc <__divsf3_pse+0x6c>
     a04:	98 3e       	cpi	r25, 0xE8	; 232
     a06:	d4 f3       	brlt	.-12     	; 0x9fc <__divsf3_pse+0x6c>
     a08:	86 95       	lsr	r24
     a0a:	77 95       	ror	r23
     a0c:	67 95       	ror	r22
     a0e:	b7 95       	ror	r27
     a10:	f7 95       	ror	r31
     a12:	9f 5f       	subi	r25, 0xFF	; 255
     a14:	c9 f7       	brne	.-14     	; 0xa08 <__divsf3_pse+0x78>
     a16:	88 0f       	add	r24, r24
     a18:	91 1d       	adc	r25, r1
     a1a:	96 95       	lsr	r25
     a1c:	87 95       	ror	r24
     a1e:	97 f9       	bld	r25, 7
     a20:	08 95       	ret
     a22:	e1 e0       	ldi	r30, 0x01	; 1
     a24:	66 0f       	add	r22, r22
     a26:	77 1f       	adc	r23, r23
     a28:	88 1f       	adc	r24, r24
     a2a:	bb 1f       	adc	r27, r27
     a2c:	62 17       	cp	r22, r18
     a2e:	73 07       	cpc	r23, r19
     a30:	84 07       	cpc	r24, r20
     a32:	ba 07       	cpc	r27, r26
     a34:	20 f0       	brcs	.+8      	; 0xa3e <__divsf3_pse+0xae>
     a36:	62 1b       	sub	r22, r18
     a38:	73 0b       	sbc	r23, r19
     a3a:	84 0b       	sbc	r24, r20
     a3c:	ba 0b       	sbc	r27, r26
     a3e:	ee 1f       	adc	r30, r30
     a40:	88 f7       	brcc	.-30     	; 0xa24 <__divsf3_pse+0x94>
     a42:	e0 95       	com	r30
     a44:	08 95       	ret

00000a46 <__fixunssfsi>:
     a46:	0e 94 e3 05 	call	0xbc6	; 0xbc6 <__fp_splitA>
     a4a:	88 f0       	brcs	.+34     	; 0xa6e <__fixunssfsi+0x28>
     a4c:	9f 57       	subi	r25, 0x7F	; 127
     a4e:	98 f0       	brcs	.+38     	; 0xa76 <__fixunssfsi+0x30>
     a50:	b9 2f       	mov	r27, r25
     a52:	99 27       	eor	r25, r25
     a54:	b7 51       	subi	r27, 0x17	; 23
     a56:	b0 f0       	brcs	.+44     	; 0xa84 <__fixunssfsi+0x3e>
     a58:	e1 f0       	breq	.+56     	; 0xa92 <__fixunssfsi+0x4c>
     a5a:	66 0f       	add	r22, r22
     a5c:	77 1f       	adc	r23, r23
     a5e:	88 1f       	adc	r24, r24
     a60:	99 1f       	adc	r25, r25
     a62:	1a f0       	brmi	.+6      	; 0xa6a <__fixunssfsi+0x24>
     a64:	ba 95       	dec	r27
     a66:	c9 f7       	brne	.-14     	; 0xa5a <__fixunssfsi+0x14>
     a68:	14 c0       	rjmp	.+40     	; 0xa92 <__fixunssfsi+0x4c>
     a6a:	b1 30       	cpi	r27, 0x01	; 1
     a6c:	91 f0       	breq	.+36     	; 0xa92 <__fixunssfsi+0x4c>
     a6e:	0e 94 fd 05 	call	0xbfa	; 0xbfa <__fp_zero>
     a72:	b1 e0       	ldi	r27, 0x01	; 1
     a74:	08 95       	ret
     a76:	0c 94 fd 05 	jmp	0xbfa	; 0xbfa <__fp_zero>
     a7a:	67 2f       	mov	r22, r23
     a7c:	78 2f       	mov	r23, r24
     a7e:	88 27       	eor	r24, r24
     a80:	b8 5f       	subi	r27, 0xF8	; 248
     a82:	39 f0       	breq	.+14     	; 0xa92 <__fixunssfsi+0x4c>
     a84:	b9 3f       	cpi	r27, 0xF9	; 249
     a86:	cc f3       	brlt	.-14     	; 0xa7a <__fixunssfsi+0x34>
     a88:	86 95       	lsr	r24
     a8a:	77 95       	ror	r23
     a8c:	67 95       	ror	r22
     a8e:	b3 95       	inc	r27
     a90:	d9 f7       	brne	.-10     	; 0xa88 <__fixunssfsi+0x42>
     a92:	3e f4       	brtc	.+14     	; 0xaa2 <__fixunssfsi+0x5c>
     a94:	90 95       	com	r25
     a96:	80 95       	com	r24
     a98:	70 95       	com	r23
     a9a:	61 95       	neg	r22
     a9c:	7f 4f       	sbci	r23, 0xFF	; 255
     a9e:	8f 4f       	sbci	r24, 0xFF	; 255
     aa0:	9f 4f       	sbci	r25, 0xFF	; 255
     aa2:	08 95       	ret

00000aa4 <__floatunsisf>:
     aa4:	e8 94       	clt
     aa6:	09 c0       	rjmp	.+18     	; 0xaba <__floatsisf+0x12>

00000aa8 <__floatsisf>:
     aa8:	97 fb       	bst	r25, 7
     aaa:	3e f4       	brtc	.+14     	; 0xaba <__floatsisf+0x12>
     aac:	90 95       	com	r25
     aae:	80 95       	com	r24
     ab0:	70 95       	com	r23
     ab2:	61 95       	neg	r22
     ab4:	7f 4f       	sbci	r23, 0xFF	; 255
     ab6:	8f 4f       	sbci	r24, 0xFF	; 255
     ab8:	9f 4f       	sbci	r25, 0xFF	; 255
     aba:	99 23       	and	r25, r25
     abc:	a9 f0       	breq	.+42     	; 0xae8 <__floatsisf+0x40>
     abe:	f9 2f       	mov	r31, r25
     ac0:	96 e9       	ldi	r25, 0x96	; 150
     ac2:	bb 27       	eor	r27, r27
     ac4:	93 95       	inc	r25
     ac6:	f6 95       	lsr	r31
     ac8:	87 95       	ror	r24
     aca:	77 95       	ror	r23
     acc:	67 95       	ror	r22
     ace:	b7 95       	ror	r27
     ad0:	f1 11       	cpse	r31, r1
     ad2:	f8 cf       	rjmp	.-16     	; 0xac4 <__floatsisf+0x1c>
     ad4:	fa f4       	brpl	.+62     	; 0xb14 <__floatsisf+0x6c>
     ad6:	bb 0f       	add	r27, r27
     ad8:	11 f4       	brne	.+4      	; 0xade <__floatsisf+0x36>
     ada:	60 ff       	sbrs	r22, 0
     adc:	1b c0       	rjmp	.+54     	; 0xb14 <__floatsisf+0x6c>
     ade:	6f 5f       	subi	r22, 0xFF	; 255
     ae0:	7f 4f       	sbci	r23, 0xFF	; 255
     ae2:	8f 4f       	sbci	r24, 0xFF	; 255
     ae4:	9f 4f       	sbci	r25, 0xFF	; 255
     ae6:	16 c0       	rjmp	.+44     	; 0xb14 <__floatsisf+0x6c>
     ae8:	88 23       	and	r24, r24
     aea:	11 f0       	breq	.+4      	; 0xaf0 <__floatsisf+0x48>
     aec:	96 e9       	ldi	r25, 0x96	; 150
     aee:	11 c0       	rjmp	.+34     	; 0xb12 <__floatsisf+0x6a>
     af0:	77 23       	and	r23, r23
     af2:	21 f0       	breq	.+8      	; 0xafc <__floatsisf+0x54>
     af4:	9e e8       	ldi	r25, 0x8E	; 142
     af6:	87 2f       	mov	r24, r23
     af8:	76 2f       	mov	r23, r22
     afa:	05 c0       	rjmp	.+10     	; 0xb06 <__floatsisf+0x5e>
     afc:	66 23       	and	r22, r22
     afe:	71 f0       	breq	.+28     	; 0xb1c <__floatsisf+0x74>
     b00:	96 e8       	ldi	r25, 0x86	; 134
     b02:	86 2f       	mov	r24, r22
     b04:	70 e0       	ldi	r23, 0x00	; 0
     b06:	60 e0       	ldi	r22, 0x00	; 0
     b08:	2a f0       	brmi	.+10     	; 0xb14 <__floatsisf+0x6c>
     b0a:	9a 95       	dec	r25
     b0c:	66 0f       	add	r22, r22
     b0e:	77 1f       	adc	r23, r23
     b10:	88 1f       	adc	r24, r24
     b12:	da f7       	brpl	.-10     	; 0xb0a <__floatsisf+0x62>
     b14:	88 0f       	add	r24, r24
     b16:	96 95       	lsr	r25
     b18:	87 95       	ror	r24
     b1a:	97 f9       	bld	r25, 7
     b1c:	08 95       	ret

00000b1e <__fp_cmp>:
     b1e:	99 0f       	add	r25, r25
     b20:	00 08       	sbc	r0, r0
     b22:	55 0f       	add	r21, r21
     b24:	aa 0b       	sbc	r26, r26
     b26:	e0 e8       	ldi	r30, 0x80	; 128
     b28:	fe ef       	ldi	r31, 0xFE	; 254
     b2a:	16 16       	cp	r1, r22
     b2c:	17 06       	cpc	r1, r23
     b2e:	e8 07       	cpc	r30, r24
     b30:	f9 07       	cpc	r31, r25
     b32:	c0 f0       	brcs	.+48     	; 0xb64 <__fp_cmp+0x46>
     b34:	12 16       	cp	r1, r18
     b36:	13 06       	cpc	r1, r19
     b38:	e4 07       	cpc	r30, r20
     b3a:	f5 07       	cpc	r31, r21
     b3c:	98 f0       	brcs	.+38     	; 0xb64 <__fp_cmp+0x46>
     b3e:	62 1b       	sub	r22, r18
     b40:	73 0b       	sbc	r23, r19
     b42:	84 0b       	sbc	r24, r20
     b44:	95 0b       	sbc	r25, r21
     b46:	39 f4       	brne	.+14     	; 0xb56 <__fp_cmp+0x38>
     b48:	0a 26       	eor	r0, r26
     b4a:	61 f0       	breq	.+24     	; 0xb64 <__fp_cmp+0x46>
     b4c:	23 2b       	or	r18, r19
     b4e:	24 2b       	or	r18, r20
     b50:	25 2b       	or	r18, r21
     b52:	21 f4       	brne	.+8      	; 0xb5c <__fp_cmp+0x3e>
     b54:	08 95       	ret
     b56:	0a 26       	eor	r0, r26
     b58:	09 f4       	brne	.+2      	; 0xb5c <__fp_cmp+0x3e>
     b5a:	a1 40       	sbci	r26, 0x01	; 1
     b5c:	a6 95       	lsr	r26
     b5e:	8f ef       	ldi	r24, 0xFF	; 255
     b60:	81 1d       	adc	r24, r1
     b62:	81 1d       	adc	r24, r1
     b64:	08 95       	ret

00000b66 <__fp_inf>:
     b66:	97 f9       	bld	r25, 7
     b68:	9f 67       	ori	r25, 0x7F	; 127
     b6a:	80 e8       	ldi	r24, 0x80	; 128
     b6c:	70 e0       	ldi	r23, 0x00	; 0
     b6e:	60 e0       	ldi	r22, 0x00	; 0
     b70:	08 95       	ret

00000b72 <__fp_nan>:
     b72:	9f ef       	ldi	r25, 0xFF	; 255
     b74:	80 ec       	ldi	r24, 0xC0	; 192
     b76:	08 95       	ret

00000b78 <__fp_pscA>:
     b78:	00 24       	eor	r0, r0
     b7a:	0a 94       	dec	r0
     b7c:	16 16       	cp	r1, r22
     b7e:	17 06       	cpc	r1, r23
     b80:	18 06       	cpc	r1, r24
     b82:	09 06       	cpc	r0, r25
     b84:	08 95       	ret

00000b86 <__fp_pscB>:
     b86:	00 24       	eor	r0, r0
     b88:	0a 94       	dec	r0
     b8a:	12 16       	cp	r1, r18
     b8c:	13 06       	cpc	r1, r19
     b8e:	14 06       	cpc	r1, r20
     b90:	05 06       	cpc	r0, r21
     b92:	08 95       	ret

00000b94 <__fp_round>:
     b94:	09 2e       	mov	r0, r25
     b96:	03 94       	inc	r0
     b98:	00 0c       	add	r0, r0
     b9a:	11 f4       	brne	.+4      	; 0xba0 <__fp_round+0xc>
     b9c:	88 23       	and	r24, r24
     b9e:	52 f0       	brmi	.+20     	; 0xbb4 <__fp_round+0x20>
     ba0:	bb 0f       	add	r27, r27
     ba2:	40 f4       	brcc	.+16     	; 0xbb4 <__fp_round+0x20>
     ba4:	bf 2b       	or	r27, r31
     ba6:	11 f4       	brne	.+4      	; 0xbac <__fp_round+0x18>
     ba8:	60 ff       	sbrs	r22, 0
     baa:	04 c0       	rjmp	.+8      	; 0xbb4 <__fp_round+0x20>
     bac:	6f 5f       	subi	r22, 0xFF	; 255
     bae:	7f 4f       	sbci	r23, 0xFF	; 255
     bb0:	8f 4f       	sbci	r24, 0xFF	; 255
     bb2:	9f 4f       	sbci	r25, 0xFF	; 255
     bb4:	08 95       	ret

00000bb6 <__fp_split3>:
     bb6:	57 fd       	sbrc	r21, 7
     bb8:	90 58       	subi	r25, 0x80	; 128
     bba:	44 0f       	add	r20, r20
     bbc:	55 1f       	adc	r21, r21
     bbe:	59 f0       	breq	.+22     	; 0xbd6 <__fp_splitA+0x10>
     bc0:	5f 3f       	cpi	r21, 0xFF	; 255
     bc2:	71 f0       	breq	.+28     	; 0xbe0 <__fp_splitA+0x1a>
     bc4:	47 95       	ror	r20

00000bc6 <__fp_splitA>:
     bc6:	88 0f       	add	r24, r24
     bc8:	97 fb       	bst	r25, 7
     bca:	99 1f       	adc	r25, r25
     bcc:	61 f0       	breq	.+24     	; 0xbe6 <__fp_splitA+0x20>
     bce:	9f 3f       	cpi	r25, 0xFF	; 255
     bd0:	79 f0       	breq	.+30     	; 0xbf0 <__fp_splitA+0x2a>
     bd2:	87 95       	ror	r24
     bd4:	08 95       	ret
     bd6:	12 16       	cp	r1, r18
     bd8:	13 06       	cpc	r1, r19
     bda:	14 06       	cpc	r1, r20
     bdc:	55 1f       	adc	r21, r21
     bde:	f2 cf       	rjmp	.-28     	; 0xbc4 <__fp_split3+0xe>
     be0:	46 95       	lsr	r20
     be2:	f1 df       	rcall	.-30     	; 0xbc6 <__fp_splitA>
     be4:	08 c0       	rjmp	.+16     	; 0xbf6 <__fp_splitA+0x30>
     be6:	16 16       	cp	r1, r22
     be8:	17 06       	cpc	r1, r23
     bea:	18 06       	cpc	r1, r24
     bec:	99 1f       	adc	r25, r25
     bee:	f1 cf       	rjmp	.-30     	; 0xbd2 <__fp_splitA+0xc>
     bf0:	86 95       	lsr	r24
     bf2:	71 05       	cpc	r23, r1
     bf4:	61 05       	cpc	r22, r1
     bf6:	08 94       	sec
     bf8:	08 95       	ret

00000bfa <__fp_zero>:
     bfa:	e8 94       	clt

00000bfc <__fp_szero>:
     bfc:	bb 27       	eor	r27, r27
     bfe:	66 27       	eor	r22, r22
     c00:	77 27       	eor	r23, r23
     c02:	cb 01       	movw	r24, r22
     c04:	97 f9       	bld	r25, 7
     c06:	08 95       	ret

00000c08 <__mulsf3>:
     c08:	0e 94 17 06 	call	0xc2e	; 0xc2e <__mulsf3x>
     c0c:	0c 94 ca 05 	jmp	0xb94	; 0xb94 <__fp_round>
     c10:	0e 94 bc 05 	call	0xb78	; 0xb78 <__fp_pscA>
     c14:	38 f0       	brcs	.+14     	; 0xc24 <__mulsf3+0x1c>
     c16:	0e 94 c3 05 	call	0xb86	; 0xb86 <__fp_pscB>
     c1a:	20 f0       	brcs	.+8      	; 0xc24 <__mulsf3+0x1c>
     c1c:	95 23       	and	r25, r21
     c1e:	11 f0       	breq	.+4      	; 0xc24 <__mulsf3+0x1c>
     c20:	0c 94 b3 05 	jmp	0xb66	; 0xb66 <__fp_inf>
     c24:	0c 94 b9 05 	jmp	0xb72	; 0xb72 <__fp_nan>
     c28:	11 24       	eor	r1, r1
     c2a:	0c 94 fe 05 	jmp	0xbfc	; 0xbfc <__fp_szero>

00000c2e <__mulsf3x>:
     c2e:	0e 94 db 05 	call	0xbb6	; 0xbb6 <__fp_split3>
     c32:	70 f3       	brcs	.-36     	; 0xc10 <__mulsf3+0x8>

00000c34 <__mulsf3_pse>:
     c34:	95 9f       	mul	r25, r21
     c36:	c1 f3       	breq	.-16     	; 0xc28 <__mulsf3+0x20>
     c38:	95 0f       	add	r25, r21
     c3a:	50 e0       	ldi	r21, 0x00	; 0
     c3c:	55 1f       	adc	r21, r21
     c3e:	62 9f       	mul	r22, r18
     c40:	f0 01       	movw	r30, r0
     c42:	72 9f       	mul	r23, r18
     c44:	bb 27       	eor	r27, r27
     c46:	f0 0d       	add	r31, r0
     c48:	b1 1d       	adc	r27, r1
     c4a:	63 9f       	mul	r22, r19
     c4c:	aa 27       	eor	r26, r26
     c4e:	f0 0d       	add	r31, r0
     c50:	b1 1d       	adc	r27, r1
     c52:	aa 1f       	adc	r26, r26
     c54:	64 9f       	mul	r22, r20
     c56:	66 27       	eor	r22, r22
     c58:	b0 0d       	add	r27, r0
     c5a:	a1 1d       	adc	r26, r1
     c5c:	66 1f       	adc	r22, r22
     c5e:	82 9f       	mul	r24, r18
     c60:	22 27       	eor	r18, r18
     c62:	b0 0d       	add	r27, r0
     c64:	a1 1d       	adc	r26, r1
     c66:	62 1f       	adc	r22, r18
     c68:	73 9f       	mul	r23, r19
     c6a:	b0 0d       	add	r27, r0
     c6c:	a1 1d       	adc	r26, r1
     c6e:	62 1f       	adc	r22, r18
     c70:	83 9f       	mul	r24, r19
     c72:	a0 0d       	add	r26, r0
     c74:	61 1d       	adc	r22, r1
     c76:	22 1f       	adc	r18, r18
     c78:	74 9f       	mul	r23, r20
     c7a:	33 27       	eor	r19, r19
     c7c:	a0 0d       	add	r26, r0
     c7e:	61 1d       	adc	r22, r1
     c80:	23 1f       	adc	r18, r19
     c82:	84 9f       	mul	r24, r20
     c84:	60 0d       	add	r22, r0
     c86:	21 1d       	adc	r18, r1
     c88:	82 2f       	mov	r24, r18
     c8a:	76 2f       	mov	r23, r22
     c8c:	6a 2f       	mov	r22, r26
     c8e:	11 24       	eor	r1, r1
     c90:	9f 57       	subi	r25, 0x7F	; 127
     c92:	50 40       	sbci	r21, 0x00	; 0
     c94:	9a f0       	brmi	.+38     	; 0xcbc <__mulsf3_pse+0x88>
     c96:	f1 f0       	breq	.+60     	; 0xcd4 <__mulsf3_pse+0xa0>
     c98:	88 23       	and	r24, r24
     c9a:	4a f0       	brmi	.+18     	; 0xcae <__mulsf3_pse+0x7a>
     c9c:	ee 0f       	add	r30, r30
     c9e:	ff 1f       	adc	r31, r31
     ca0:	bb 1f       	adc	r27, r27
     ca2:	66 1f       	adc	r22, r22
     ca4:	77 1f       	adc	r23, r23
     ca6:	88 1f       	adc	r24, r24
     ca8:	91 50       	subi	r25, 0x01	; 1
     caa:	50 40       	sbci	r21, 0x00	; 0
     cac:	a9 f7       	brne	.-22     	; 0xc98 <__mulsf3_pse+0x64>
     cae:	9e 3f       	cpi	r25, 0xFE	; 254
     cb0:	51 05       	cpc	r21, r1
     cb2:	80 f0       	brcs	.+32     	; 0xcd4 <__mulsf3_pse+0xa0>
     cb4:	0c 94 b3 05 	jmp	0xb66	; 0xb66 <__fp_inf>
     cb8:	0c 94 fe 05 	jmp	0xbfc	; 0xbfc <__fp_szero>
     cbc:	5f 3f       	cpi	r21, 0xFF	; 255
     cbe:	e4 f3       	brlt	.-8      	; 0xcb8 <__mulsf3_pse+0x84>
     cc0:	98 3e       	cpi	r25, 0xE8	; 232
     cc2:	d4 f3       	brlt	.-12     	; 0xcb8 <__mulsf3_pse+0x84>
     cc4:	86 95       	lsr	r24
     cc6:	77 95       	ror	r23
     cc8:	67 95       	ror	r22
     cca:	b7 95       	ror	r27
     ccc:	f7 95       	ror	r31
     cce:	e7 95       	ror	r30
     cd0:	9f 5f       	subi	r25, 0xFF	; 255
     cd2:	c1 f7       	brne	.-16     	; 0xcc4 <__mulsf3_pse+0x90>
     cd4:	fe 2b       	or	r31, r30
     cd6:	88 0f       	add	r24, r24
     cd8:	91 1d       	adc	r25, r1
     cda:	96 95       	lsr	r25
     cdc:	87 95       	ror	r24
     cde:	97 f9       	bld	r25, 7
     ce0:	08 95       	ret

00000ce2 <round>:
     ce2:	0e 94 e3 05 	call	0xbc6	; 0xbc6 <__fp_splitA>
     ce6:	e8 f0       	brcs	.+58     	; 0xd22 <round+0x40>
     ce8:	9e 37       	cpi	r25, 0x7E	; 126
     cea:	e8 f0       	brcs	.+58     	; 0xd26 <round+0x44>
     cec:	96 39       	cpi	r25, 0x96	; 150
     cee:	b8 f4       	brcc	.+46     	; 0xd1e <round+0x3c>
     cf0:	9e 38       	cpi	r25, 0x8E	; 142
     cf2:	48 f4       	brcc	.+18     	; 0xd06 <round+0x24>
     cf4:	67 2f       	mov	r22, r23
     cf6:	78 2f       	mov	r23, r24
     cf8:	88 27       	eor	r24, r24
     cfa:	98 5f       	subi	r25, 0xF8	; 248
     cfc:	f9 cf       	rjmp	.-14     	; 0xcf0 <round+0xe>
     cfe:	86 95       	lsr	r24
     d00:	77 95       	ror	r23
     d02:	67 95       	ror	r22
     d04:	93 95       	inc	r25
     d06:	95 39       	cpi	r25, 0x95	; 149
     d08:	d0 f3       	brcs	.-12     	; 0xcfe <round+0x1c>
     d0a:	b6 2f       	mov	r27, r22
     d0c:	b1 70       	andi	r27, 0x01	; 1
     d0e:	6b 0f       	add	r22, r27
     d10:	71 1d       	adc	r23, r1
     d12:	81 1d       	adc	r24, r1
     d14:	20 f4       	brcc	.+8      	; 0xd1e <round+0x3c>
     d16:	87 95       	ror	r24
     d18:	77 95       	ror	r23
     d1a:	67 95       	ror	r22
     d1c:	93 95       	inc	r25
     d1e:	0c 94 95 06 	jmp	0xd2a	; 0xd2a <__fp_mintl>
     d22:	0c 94 b0 06 	jmp	0xd60	; 0xd60 <__fp_mpack>
     d26:	0c 94 fe 05 	jmp	0xbfc	; 0xbfc <__fp_szero>

00000d2a <__fp_mintl>:
     d2a:	88 23       	and	r24, r24
     d2c:	71 f4       	brne	.+28     	; 0xd4a <__fp_mintl+0x20>
     d2e:	77 23       	and	r23, r23
     d30:	21 f0       	breq	.+8      	; 0xd3a <__fp_mintl+0x10>
     d32:	98 50       	subi	r25, 0x08	; 8
     d34:	87 2b       	or	r24, r23
     d36:	76 2f       	mov	r23, r22
     d38:	07 c0       	rjmp	.+14     	; 0xd48 <__fp_mintl+0x1e>
     d3a:	66 23       	and	r22, r22
     d3c:	11 f4       	brne	.+4      	; 0xd42 <__fp_mintl+0x18>
     d3e:	99 27       	eor	r25, r25
     d40:	0d c0       	rjmp	.+26     	; 0xd5c <__fp_mintl+0x32>
     d42:	90 51       	subi	r25, 0x10	; 16
     d44:	86 2b       	or	r24, r22
     d46:	70 e0       	ldi	r23, 0x00	; 0
     d48:	60 e0       	ldi	r22, 0x00	; 0
     d4a:	2a f0       	brmi	.+10     	; 0xd56 <__fp_mintl+0x2c>
     d4c:	9a 95       	dec	r25
     d4e:	66 0f       	add	r22, r22
     d50:	77 1f       	adc	r23, r23
     d52:	88 1f       	adc	r24, r24
     d54:	da f7       	brpl	.-10     	; 0xd4c <__fp_mintl+0x22>
     d56:	88 0f       	add	r24, r24
     d58:	96 95       	lsr	r25
     d5a:	87 95       	ror	r24
     d5c:	97 f9       	bld	r25, 7
     d5e:	08 95       	ret

00000d60 <__fp_mpack>:
     d60:	9f 3f       	cpi	r25, 0xFF	; 255
     d62:	31 f0       	breq	.+12     	; 0xd70 <__fp_mpack_finite+0xc>

00000d64 <__fp_mpack_finite>:
     d64:	91 50       	subi	r25, 0x01	; 1
     d66:	20 f4       	brcc	.+8      	; 0xd70 <__fp_mpack_finite+0xc>
     d68:	87 95       	ror	r24
     d6a:	77 95       	ror	r23
     d6c:	67 95       	ror	r22
     d6e:	b7 95       	ror	r27
     d70:	88 0f       	add	r24, r24
     d72:	91 1d       	adc	r25, r1
     d74:	96 95       	lsr	r25
     d76:	87 95       	ror	r24
     d78:	97 f9       	bld	r25, 7
     d7a:	08 95       	ret

00000d7c <vfprintf>:
     d7c:	2f 92       	push	r2
     d7e:	3f 92       	push	r3
     d80:	4f 92       	push	r4
     d82:	5f 92       	push	r5
     d84:	6f 92       	push	r6
     d86:	7f 92       	push	r7
     d88:	8f 92       	push	r8
     d8a:	9f 92       	push	r9
     d8c:	af 92       	push	r10
     d8e:	bf 92       	push	r11
     d90:	cf 92       	push	r12
     d92:	df 92       	push	r13
     d94:	ef 92       	push	r14
     d96:	ff 92       	push	r15
     d98:	0f 93       	push	r16
     d9a:	1f 93       	push	r17
     d9c:	cf 93       	push	r28
     d9e:	df 93       	push	r29
     da0:	cd b7       	in	r28, 0x3d	; 61
     da2:	de b7       	in	r29, 0x3e	; 62
     da4:	60 97       	sbiw	r28, 0x10	; 16
     da6:	cd bf       	out	0x3d, r28	; 61
     da8:	de bf       	out	0x3e, r29	; 62
     daa:	7c 01       	movw	r14, r24
     dac:	1b 01       	movw	r2, r22
     dae:	6a 01       	movw	r12, r20
     db0:	fc 01       	movw	r30, r24
     db2:	16 82       	std	Z+6, r1	; 0x06
     db4:	17 82       	std	Z+7, r1	; 0x07
     db6:	83 81       	ldd	r24, Z+3	; 0x03
     db8:	81 ff       	sbrs	r24, 1
     dba:	44 c3       	rjmp	.+1672   	; 0x1444 <vfprintf+0x6c8>
     dbc:	9e 01       	movw	r18, r28
     dbe:	2f 5f       	subi	r18, 0xFF	; 255
     dc0:	3f 4f       	sbci	r19, 0xFF	; 255
     dc2:	39 01       	movw	r6, r18
     dc4:	f7 01       	movw	r30, r14
     dc6:	93 81       	ldd	r25, Z+3	; 0x03
     dc8:	f1 01       	movw	r30, r2
     dca:	93 fd       	sbrc	r25, 3
     dcc:	85 91       	lpm	r24, Z+
     dce:	93 ff       	sbrs	r25, 3
     dd0:	81 91       	ld	r24, Z+
     dd2:	1f 01       	movw	r2, r30
     dd4:	88 23       	and	r24, r24
     dd6:	09 f4       	brne	.+2      	; 0xdda <vfprintf+0x5e>
     dd8:	31 c3       	rjmp	.+1634   	; 0x143c <vfprintf+0x6c0>
     dda:	85 32       	cpi	r24, 0x25	; 37
     ddc:	39 f4       	brne	.+14     	; 0xdec <vfprintf+0x70>
     dde:	93 fd       	sbrc	r25, 3
     de0:	85 91       	lpm	r24, Z+
     de2:	93 ff       	sbrs	r25, 3
     de4:	81 91       	ld	r24, Z+
     de6:	1f 01       	movw	r2, r30
     de8:	85 32       	cpi	r24, 0x25	; 37
     dea:	39 f4       	brne	.+14     	; 0xdfa <vfprintf+0x7e>
     dec:	b7 01       	movw	r22, r14
     dee:	90 e0       	ldi	r25, 0x00	; 0
     df0:	0e 94 4c 0b 	call	0x1698	; 0x1698 <fputc>
     df4:	56 01       	movw	r10, r12
     df6:	65 01       	movw	r12, r10
     df8:	e5 cf       	rjmp	.-54     	; 0xdc4 <vfprintf+0x48>
     dfa:	10 e0       	ldi	r17, 0x00	; 0
     dfc:	51 2c       	mov	r5, r1
     dfe:	91 2c       	mov	r9, r1
     e00:	ff e1       	ldi	r31, 0x1F	; 31
     e02:	f9 15       	cp	r31, r9
     e04:	d8 f0       	brcs	.+54     	; 0xe3c <vfprintf+0xc0>
     e06:	8b 32       	cpi	r24, 0x2B	; 43
     e08:	79 f0       	breq	.+30     	; 0xe28 <vfprintf+0xac>
     e0a:	38 f4       	brcc	.+14     	; 0xe1a <vfprintf+0x9e>
     e0c:	80 32       	cpi	r24, 0x20	; 32
     e0e:	79 f0       	breq	.+30     	; 0xe2e <vfprintf+0xb2>
     e10:	83 32       	cpi	r24, 0x23	; 35
     e12:	a1 f4       	brne	.+40     	; 0xe3c <vfprintf+0xc0>
     e14:	f9 2d       	mov	r31, r9
     e16:	f0 61       	ori	r31, 0x10	; 16
     e18:	2e c0       	rjmp	.+92     	; 0xe76 <vfprintf+0xfa>
     e1a:	8d 32       	cpi	r24, 0x2D	; 45
     e1c:	61 f0       	breq	.+24     	; 0xe36 <vfprintf+0xba>
     e1e:	80 33       	cpi	r24, 0x30	; 48
     e20:	69 f4       	brne	.+26     	; 0xe3c <vfprintf+0xc0>
     e22:	29 2d       	mov	r18, r9
     e24:	21 60       	ori	r18, 0x01	; 1
     e26:	2d c0       	rjmp	.+90     	; 0xe82 <vfprintf+0x106>
     e28:	39 2d       	mov	r19, r9
     e2a:	32 60       	ori	r19, 0x02	; 2
     e2c:	93 2e       	mov	r9, r19
     e2e:	89 2d       	mov	r24, r9
     e30:	84 60       	ori	r24, 0x04	; 4
     e32:	98 2e       	mov	r9, r24
     e34:	2a c0       	rjmp	.+84     	; 0xe8a <vfprintf+0x10e>
     e36:	e9 2d       	mov	r30, r9
     e38:	e8 60       	ori	r30, 0x08	; 8
     e3a:	15 c0       	rjmp	.+42     	; 0xe66 <vfprintf+0xea>
     e3c:	97 fc       	sbrc	r9, 7
     e3e:	2d c0       	rjmp	.+90     	; 0xe9a <vfprintf+0x11e>
     e40:	20 ed       	ldi	r18, 0xD0	; 208
     e42:	28 0f       	add	r18, r24
     e44:	2a 30       	cpi	r18, 0x0A	; 10
     e46:	88 f4       	brcc	.+34     	; 0xe6a <vfprintf+0xee>
     e48:	96 fe       	sbrs	r9, 6
     e4a:	06 c0       	rjmp	.+12     	; 0xe58 <vfprintf+0xdc>
     e4c:	3a e0       	ldi	r19, 0x0A	; 10
     e4e:	13 9f       	mul	r17, r19
     e50:	20 0d       	add	r18, r0
     e52:	11 24       	eor	r1, r1
     e54:	12 2f       	mov	r17, r18
     e56:	19 c0       	rjmp	.+50     	; 0xe8a <vfprintf+0x10e>
     e58:	8a e0       	ldi	r24, 0x0A	; 10
     e5a:	58 9e       	mul	r5, r24
     e5c:	20 0d       	add	r18, r0
     e5e:	11 24       	eor	r1, r1
     e60:	52 2e       	mov	r5, r18
     e62:	e9 2d       	mov	r30, r9
     e64:	e0 62       	ori	r30, 0x20	; 32
     e66:	9e 2e       	mov	r9, r30
     e68:	10 c0       	rjmp	.+32     	; 0xe8a <vfprintf+0x10e>
     e6a:	8e 32       	cpi	r24, 0x2E	; 46
     e6c:	31 f4       	brne	.+12     	; 0xe7a <vfprintf+0xfe>
     e6e:	96 fc       	sbrc	r9, 6
     e70:	e5 c2       	rjmp	.+1482   	; 0x143c <vfprintf+0x6c0>
     e72:	f9 2d       	mov	r31, r9
     e74:	f0 64       	ori	r31, 0x40	; 64
     e76:	9f 2e       	mov	r9, r31
     e78:	08 c0       	rjmp	.+16     	; 0xe8a <vfprintf+0x10e>
     e7a:	8c 36       	cpi	r24, 0x6C	; 108
     e7c:	21 f4       	brne	.+8      	; 0xe86 <vfprintf+0x10a>
     e7e:	29 2d       	mov	r18, r9
     e80:	20 68       	ori	r18, 0x80	; 128
     e82:	92 2e       	mov	r9, r18
     e84:	02 c0       	rjmp	.+4      	; 0xe8a <vfprintf+0x10e>
     e86:	88 36       	cpi	r24, 0x68	; 104
     e88:	41 f4       	brne	.+16     	; 0xe9a <vfprintf+0x11e>
     e8a:	f1 01       	movw	r30, r2
     e8c:	93 fd       	sbrc	r25, 3
     e8e:	85 91       	lpm	r24, Z+
     e90:	93 ff       	sbrs	r25, 3
     e92:	81 91       	ld	r24, Z+
     e94:	1f 01       	movw	r2, r30
     e96:	81 11       	cpse	r24, r1
     e98:	b3 cf       	rjmp	.-154    	; 0xe00 <vfprintf+0x84>
     e9a:	9b eb       	ldi	r25, 0xBB	; 187
     e9c:	98 0f       	add	r25, r24
     e9e:	93 30       	cpi	r25, 0x03	; 3
     ea0:	20 f4       	brcc	.+8      	; 0xeaa <vfprintf+0x12e>
     ea2:	99 2d       	mov	r25, r9
     ea4:	90 61       	ori	r25, 0x10	; 16
     ea6:	80 5e       	subi	r24, 0xE0	; 224
     ea8:	07 c0       	rjmp	.+14     	; 0xeb8 <vfprintf+0x13c>
     eaa:	9b e9       	ldi	r25, 0x9B	; 155
     eac:	98 0f       	add	r25, r24
     eae:	93 30       	cpi	r25, 0x03	; 3
     eb0:	08 f0       	brcs	.+2      	; 0xeb4 <vfprintf+0x138>
     eb2:	66 c1       	rjmp	.+716    	; 0x1180 <vfprintf+0x404>
     eb4:	99 2d       	mov	r25, r9
     eb6:	9f 7e       	andi	r25, 0xEF	; 239
     eb8:	96 ff       	sbrs	r25, 6
     eba:	16 e0       	ldi	r17, 0x06	; 6
     ebc:	9f 73       	andi	r25, 0x3F	; 63
     ebe:	99 2e       	mov	r9, r25
     ec0:	85 36       	cpi	r24, 0x65	; 101
     ec2:	19 f4       	brne	.+6      	; 0xeca <vfprintf+0x14e>
     ec4:	90 64       	ori	r25, 0x40	; 64
     ec6:	99 2e       	mov	r9, r25
     ec8:	08 c0       	rjmp	.+16     	; 0xeda <vfprintf+0x15e>
     eca:	86 36       	cpi	r24, 0x66	; 102
     ecc:	21 f4       	brne	.+8      	; 0xed6 <vfprintf+0x15a>
     ece:	39 2f       	mov	r19, r25
     ed0:	30 68       	ori	r19, 0x80	; 128
     ed2:	93 2e       	mov	r9, r19
     ed4:	02 c0       	rjmp	.+4      	; 0xeda <vfprintf+0x15e>
     ed6:	11 11       	cpse	r17, r1
     ed8:	11 50       	subi	r17, 0x01	; 1
     eda:	97 fe       	sbrs	r9, 7
     edc:	07 c0       	rjmp	.+14     	; 0xeec <vfprintf+0x170>
     ede:	1c 33       	cpi	r17, 0x3C	; 60
     ee0:	50 f4       	brcc	.+20     	; 0xef6 <vfprintf+0x17a>
     ee2:	44 24       	eor	r4, r4
     ee4:	43 94       	inc	r4
     ee6:	41 0e       	add	r4, r17
     ee8:	27 e0       	ldi	r18, 0x07	; 7
     eea:	0b c0       	rjmp	.+22     	; 0xf02 <vfprintf+0x186>
     eec:	18 30       	cpi	r17, 0x08	; 8
     eee:	38 f0       	brcs	.+14     	; 0xefe <vfprintf+0x182>
     ef0:	27 e0       	ldi	r18, 0x07	; 7
     ef2:	17 e0       	ldi	r17, 0x07	; 7
     ef4:	05 c0       	rjmp	.+10     	; 0xf00 <vfprintf+0x184>
     ef6:	27 e0       	ldi	r18, 0x07	; 7
     ef8:	9c e3       	ldi	r25, 0x3C	; 60
     efa:	49 2e       	mov	r4, r25
     efc:	02 c0       	rjmp	.+4      	; 0xf02 <vfprintf+0x186>
     efe:	21 2f       	mov	r18, r17
     f00:	41 2c       	mov	r4, r1
     f02:	56 01       	movw	r10, r12
     f04:	84 e0       	ldi	r24, 0x04	; 4
     f06:	a8 0e       	add	r10, r24
     f08:	b1 1c       	adc	r11, r1
     f0a:	f6 01       	movw	r30, r12
     f0c:	60 81       	ld	r22, Z
     f0e:	71 81       	ldd	r23, Z+1	; 0x01
     f10:	82 81       	ldd	r24, Z+2	; 0x02
     f12:	93 81       	ldd	r25, Z+3	; 0x03
     f14:	04 2d       	mov	r16, r4
     f16:	a3 01       	movw	r20, r6
     f18:	0e 94 5e 0a 	call	0x14bc	; 0x14bc <__ftoa_engine>
     f1c:	6c 01       	movw	r12, r24
     f1e:	f9 81       	ldd	r31, Y+1	; 0x01
     f20:	fc 87       	std	Y+12, r31	; 0x0c
     f22:	f0 ff       	sbrs	r31, 0
     f24:	02 c0       	rjmp	.+4      	; 0xf2a <vfprintf+0x1ae>
     f26:	f3 ff       	sbrs	r31, 3
     f28:	06 c0       	rjmp	.+12     	; 0xf36 <vfprintf+0x1ba>
     f2a:	91 fc       	sbrc	r9, 1
     f2c:	06 c0       	rjmp	.+12     	; 0xf3a <vfprintf+0x1be>
     f2e:	92 fe       	sbrs	r9, 2
     f30:	06 c0       	rjmp	.+12     	; 0xf3e <vfprintf+0x1c2>
     f32:	00 e2       	ldi	r16, 0x20	; 32
     f34:	05 c0       	rjmp	.+10     	; 0xf40 <vfprintf+0x1c4>
     f36:	0d e2       	ldi	r16, 0x2D	; 45
     f38:	03 c0       	rjmp	.+6      	; 0xf40 <vfprintf+0x1c4>
     f3a:	0b e2       	ldi	r16, 0x2B	; 43
     f3c:	01 c0       	rjmp	.+2      	; 0xf40 <vfprintf+0x1c4>
     f3e:	00 e0       	ldi	r16, 0x00	; 0
     f40:	8c 85       	ldd	r24, Y+12	; 0x0c
     f42:	8c 70       	andi	r24, 0x0C	; 12
     f44:	19 f0       	breq	.+6      	; 0xf4c <vfprintf+0x1d0>
     f46:	01 11       	cpse	r16, r1
     f48:	5a c2       	rjmp	.+1204   	; 0x13fe <vfprintf+0x682>
     f4a:	9b c2       	rjmp	.+1334   	; 0x1482 <vfprintf+0x706>
     f4c:	97 fe       	sbrs	r9, 7
     f4e:	10 c0       	rjmp	.+32     	; 0xf70 <vfprintf+0x1f4>
     f50:	4c 0c       	add	r4, r12
     f52:	fc 85       	ldd	r31, Y+12	; 0x0c
     f54:	f4 ff       	sbrs	r31, 4
     f56:	04 c0       	rjmp	.+8      	; 0xf60 <vfprintf+0x1e4>
     f58:	8a 81       	ldd	r24, Y+2	; 0x02
     f5a:	81 33       	cpi	r24, 0x31	; 49
     f5c:	09 f4       	brne	.+2      	; 0xf60 <vfprintf+0x1e4>
     f5e:	4a 94       	dec	r4
     f60:	14 14       	cp	r1, r4
     f62:	74 f5       	brge	.+92     	; 0xfc0 <vfprintf+0x244>
     f64:	28 e0       	ldi	r18, 0x08	; 8
     f66:	24 15       	cp	r18, r4
     f68:	78 f5       	brcc	.+94     	; 0xfc8 <vfprintf+0x24c>
     f6a:	88 e0       	ldi	r24, 0x08	; 8
     f6c:	48 2e       	mov	r4, r24
     f6e:	2c c0       	rjmp	.+88     	; 0xfc8 <vfprintf+0x24c>
     f70:	96 fc       	sbrc	r9, 6
     f72:	2a c0       	rjmp	.+84     	; 0xfc8 <vfprintf+0x24c>
     f74:	81 2f       	mov	r24, r17
     f76:	90 e0       	ldi	r25, 0x00	; 0
     f78:	8c 15       	cp	r24, r12
     f7a:	9d 05       	cpc	r25, r13
     f7c:	9c f0       	brlt	.+38     	; 0xfa4 <vfprintf+0x228>
     f7e:	3c ef       	ldi	r19, 0xFC	; 252
     f80:	c3 16       	cp	r12, r19
     f82:	3f ef       	ldi	r19, 0xFF	; 255
     f84:	d3 06       	cpc	r13, r19
     f86:	74 f0       	brlt	.+28     	; 0xfa4 <vfprintf+0x228>
     f88:	89 2d       	mov	r24, r9
     f8a:	80 68       	ori	r24, 0x80	; 128
     f8c:	98 2e       	mov	r9, r24
     f8e:	0a c0       	rjmp	.+20     	; 0xfa4 <vfprintf+0x228>
     f90:	e2 e0       	ldi	r30, 0x02	; 2
     f92:	f0 e0       	ldi	r31, 0x00	; 0
     f94:	ec 0f       	add	r30, r28
     f96:	fd 1f       	adc	r31, r29
     f98:	e1 0f       	add	r30, r17
     f9a:	f1 1d       	adc	r31, r1
     f9c:	80 81       	ld	r24, Z
     f9e:	80 33       	cpi	r24, 0x30	; 48
     fa0:	19 f4       	brne	.+6      	; 0xfa8 <vfprintf+0x22c>
     fa2:	11 50       	subi	r17, 0x01	; 1
     fa4:	11 11       	cpse	r17, r1
     fa6:	f4 cf       	rjmp	.-24     	; 0xf90 <vfprintf+0x214>
     fa8:	97 fe       	sbrs	r9, 7
     faa:	0e c0       	rjmp	.+28     	; 0xfc8 <vfprintf+0x24c>
     fac:	44 24       	eor	r4, r4
     fae:	43 94       	inc	r4
     fb0:	41 0e       	add	r4, r17
     fb2:	81 2f       	mov	r24, r17
     fb4:	90 e0       	ldi	r25, 0x00	; 0
     fb6:	c8 16       	cp	r12, r24
     fb8:	d9 06       	cpc	r13, r25
     fba:	2c f4       	brge	.+10     	; 0xfc6 <vfprintf+0x24a>
     fbc:	1c 19       	sub	r17, r12
     fbe:	04 c0       	rjmp	.+8      	; 0xfc8 <vfprintf+0x24c>
     fc0:	44 24       	eor	r4, r4
     fc2:	43 94       	inc	r4
     fc4:	01 c0       	rjmp	.+2      	; 0xfc8 <vfprintf+0x24c>
     fc6:	10 e0       	ldi	r17, 0x00	; 0
     fc8:	97 fe       	sbrs	r9, 7
     fca:	06 c0       	rjmp	.+12     	; 0xfd8 <vfprintf+0x25c>
     fcc:	1c 14       	cp	r1, r12
     fce:	1d 04       	cpc	r1, r13
     fd0:	34 f4       	brge	.+12     	; 0xfde <vfprintf+0x262>
     fd2:	c6 01       	movw	r24, r12
     fd4:	01 96       	adiw	r24, 0x01	; 1
     fd6:	05 c0       	rjmp	.+10     	; 0xfe2 <vfprintf+0x266>
     fd8:	85 e0       	ldi	r24, 0x05	; 5
     fda:	90 e0       	ldi	r25, 0x00	; 0
     fdc:	02 c0       	rjmp	.+4      	; 0xfe2 <vfprintf+0x266>
     fde:	81 e0       	ldi	r24, 0x01	; 1
     fe0:	90 e0       	ldi	r25, 0x00	; 0
     fe2:	01 11       	cpse	r16, r1
     fe4:	01 96       	adiw	r24, 0x01	; 1
     fe6:	11 23       	and	r17, r17
     fe8:	31 f0       	breq	.+12     	; 0xff6 <vfprintf+0x27a>
     fea:	21 2f       	mov	r18, r17
     fec:	30 e0       	ldi	r19, 0x00	; 0
     fee:	2f 5f       	subi	r18, 0xFF	; 255
     ff0:	3f 4f       	sbci	r19, 0xFF	; 255
     ff2:	82 0f       	add	r24, r18
     ff4:	93 1f       	adc	r25, r19
     ff6:	25 2d       	mov	r18, r5
     ff8:	30 e0       	ldi	r19, 0x00	; 0
     ffa:	82 17       	cp	r24, r18
     ffc:	93 07       	cpc	r25, r19
     ffe:	14 f4       	brge	.+4      	; 0x1004 <vfprintf+0x288>
    1000:	58 1a       	sub	r5, r24
    1002:	01 c0       	rjmp	.+2      	; 0x1006 <vfprintf+0x28a>
    1004:	51 2c       	mov	r5, r1
    1006:	89 2d       	mov	r24, r9
    1008:	89 70       	andi	r24, 0x09	; 9
    100a:	49 f4       	brne	.+18     	; 0x101e <vfprintf+0x2a2>
    100c:	55 20       	and	r5, r5
    100e:	39 f0       	breq	.+14     	; 0x101e <vfprintf+0x2a2>
    1010:	b7 01       	movw	r22, r14
    1012:	80 e2       	ldi	r24, 0x20	; 32
    1014:	90 e0       	ldi	r25, 0x00	; 0
    1016:	0e 94 4c 0b 	call	0x1698	; 0x1698 <fputc>
    101a:	5a 94       	dec	r5
    101c:	f7 cf       	rjmp	.-18     	; 0x100c <vfprintf+0x290>
    101e:	00 23       	and	r16, r16
    1020:	29 f0       	breq	.+10     	; 0x102c <vfprintf+0x2b0>
    1022:	b7 01       	movw	r22, r14
    1024:	80 2f       	mov	r24, r16
    1026:	90 e0       	ldi	r25, 0x00	; 0
    1028:	0e 94 4c 0b 	call	0x1698	; 0x1698 <fputc>
    102c:	93 fc       	sbrc	r9, 3
    102e:	09 c0       	rjmp	.+18     	; 0x1042 <vfprintf+0x2c6>
    1030:	55 20       	and	r5, r5
    1032:	39 f0       	breq	.+14     	; 0x1042 <vfprintf+0x2c6>
    1034:	b7 01       	movw	r22, r14
    1036:	80 e3       	ldi	r24, 0x30	; 48
    1038:	90 e0       	ldi	r25, 0x00	; 0
    103a:	0e 94 4c 0b 	call	0x1698	; 0x1698 <fputc>
    103e:	5a 94       	dec	r5
    1040:	f7 cf       	rjmp	.-18     	; 0x1030 <vfprintf+0x2b4>
    1042:	97 fe       	sbrs	r9, 7
    1044:	4c c0       	rjmp	.+152    	; 0x10de <vfprintf+0x362>
    1046:	46 01       	movw	r8, r12
    1048:	d7 fe       	sbrs	r13, 7
    104a:	02 c0       	rjmp	.+4      	; 0x1050 <vfprintf+0x2d4>
    104c:	81 2c       	mov	r8, r1
    104e:	91 2c       	mov	r9, r1
    1050:	c6 01       	movw	r24, r12
    1052:	88 19       	sub	r24, r8
    1054:	99 09       	sbc	r25, r9
    1056:	f3 01       	movw	r30, r6
    1058:	e8 0f       	add	r30, r24
    105a:	f9 1f       	adc	r31, r25
    105c:	ed 87       	std	Y+13, r30	; 0x0d
    105e:	fe 87       	std	Y+14, r31	; 0x0e
    1060:	96 01       	movw	r18, r12
    1062:	24 19       	sub	r18, r4
    1064:	31 09       	sbc	r19, r1
    1066:	2f 87       	std	Y+15, r18	; 0x0f
    1068:	38 8b       	std	Y+16, r19	; 0x10
    106a:	01 2f       	mov	r16, r17
    106c:	10 e0       	ldi	r17, 0x00	; 0
    106e:	11 95       	neg	r17
    1070:	01 95       	neg	r16
    1072:	11 09       	sbc	r17, r1
    1074:	3f ef       	ldi	r19, 0xFF	; 255
    1076:	83 16       	cp	r8, r19
    1078:	93 06       	cpc	r9, r19
    107a:	29 f4       	brne	.+10     	; 0x1086 <vfprintf+0x30a>
    107c:	b7 01       	movw	r22, r14
    107e:	8e e2       	ldi	r24, 0x2E	; 46
    1080:	90 e0       	ldi	r25, 0x00	; 0
    1082:	0e 94 4c 0b 	call	0x1698	; 0x1698 <fputc>
    1086:	c8 14       	cp	r12, r8
    1088:	d9 04       	cpc	r13, r9
    108a:	4c f0       	brlt	.+18     	; 0x109e <vfprintf+0x322>
    108c:	8f 85       	ldd	r24, Y+15	; 0x0f
    108e:	98 89       	ldd	r25, Y+16	; 0x10
    1090:	88 15       	cp	r24, r8
    1092:	99 05       	cpc	r25, r9
    1094:	24 f4       	brge	.+8      	; 0x109e <vfprintf+0x322>
    1096:	ed 85       	ldd	r30, Y+13	; 0x0d
    1098:	fe 85       	ldd	r31, Y+14	; 0x0e
    109a:	81 81       	ldd	r24, Z+1	; 0x01
    109c:	01 c0       	rjmp	.+2      	; 0x10a0 <vfprintf+0x324>
    109e:	80 e3       	ldi	r24, 0x30	; 48
    10a0:	f1 e0       	ldi	r31, 0x01	; 1
    10a2:	8f 1a       	sub	r8, r31
    10a4:	91 08       	sbc	r9, r1
    10a6:	2d 85       	ldd	r18, Y+13	; 0x0d
    10a8:	3e 85       	ldd	r19, Y+14	; 0x0e
    10aa:	2f 5f       	subi	r18, 0xFF	; 255
    10ac:	3f 4f       	sbci	r19, 0xFF	; 255
    10ae:	2d 87       	std	Y+13, r18	; 0x0d
    10b0:	3e 87       	std	Y+14, r19	; 0x0e
    10b2:	80 16       	cp	r8, r16
    10b4:	91 06       	cpc	r9, r17
    10b6:	2c f0       	brlt	.+10     	; 0x10c2 <vfprintf+0x346>
    10b8:	b7 01       	movw	r22, r14
    10ba:	90 e0       	ldi	r25, 0x00	; 0
    10bc:	0e 94 4c 0b 	call	0x1698	; 0x1698 <fputc>
    10c0:	d9 cf       	rjmp	.-78     	; 0x1074 <vfprintf+0x2f8>
    10c2:	c8 14       	cp	r12, r8
    10c4:	d9 04       	cpc	r13, r9
    10c6:	41 f4       	brne	.+16     	; 0x10d8 <vfprintf+0x35c>
    10c8:	9a 81       	ldd	r25, Y+2	; 0x02
    10ca:	96 33       	cpi	r25, 0x36	; 54
    10cc:	20 f4       	brcc	.+8      	; 0x10d6 <vfprintf+0x35a>
    10ce:	95 33       	cpi	r25, 0x35	; 53
    10d0:	19 f4       	brne	.+6      	; 0x10d8 <vfprintf+0x35c>
    10d2:	3c 85       	ldd	r19, Y+12	; 0x0c
    10d4:	34 ff       	sbrs	r19, 4
    10d6:	81 e3       	ldi	r24, 0x31	; 49
    10d8:	b7 01       	movw	r22, r14
    10da:	90 e0       	ldi	r25, 0x00	; 0
    10dc:	4e c0       	rjmp	.+156    	; 0x117a <vfprintf+0x3fe>
    10de:	8a 81       	ldd	r24, Y+2	; 0x02
    10e0:	81 33       	cpi	r24, 0x31	; 49
    10e2:	19 f0       	breq	.+6      	; 0x10ea <vfprintf+0x36e>
    10e4:	9c 85       	ldd	r25, Y+12	; 0x0c
    10e6:	9f 7e       	andi	r25, 0xEF	; 239
    10e8:	9c 87       	std	Y+12, r25	; 0x0c
    10ea:	b7 01       	movw	r22, r14
    10ec:	90 e0       	ldi	r25, 0x00	; 0
    10ee:	0e 94 4c 0b 	call	0x1698	; 0x1698 <fputc>
    10f2:	11 11       	cpse	r17, r1
    10f4:	05 c0       	rjmp	.+10     	; 0x1100 <vfprintf+0x384>
    10f6:	94 fc       	sbrc	r9, 4
    10f8:	18 c0       	rjmp	.+48     	; 0x112a <vfprintf+0x3ae>
    10fa:	85 e6       	ldi	r24, 0x65	; 101
    10fc:	90 e0       	ldi	r25, 0x00	; 0
    10fe:	17 c0       	rjmp	.+46     	; 0x112e <vfprintf+0x3b2>
    1100:	b7 01       	movw	r22, r14
    1102:	8e e2       	ldi	r24, 0x2E	; 46
    1104:	90 e0       	ldi	r25, 0x00	; 0
    1106:	0e 94 4c 0b 	call	0x1698	; 0x1698 <fputc>
    110a:	1e 5f       	subi	r17, 0xFE	; 254
    110c:	82 e0       	ldi	r24, 0x02	; 2
    110e:	01 e0       	ldi	r16, 0x01	; 1
    1110:	08 0f       	add	r16, r24
    1112:	f3 01       	movw	r30, r6
    1114:	e8 0f       	add	r30, r24
    1116:	f1 1d       	adc	r31, r1
    1118:	80 81       	ld	r24, Z
    111a:	b7 01       	movw	r22, r14
    111c:	90 e0       	ldi	r25, 0x00	; 0
    111e:	0e 94 4c 0b 	call	0x1698	; 0x1698 <fputc>
    1122:	80 2f       	mov	r24, r16
    1124:	01 13       	cpse	r16, r17
    1126:	f3 cf       	rjmp	.-26     	; 0x110e <vfprintf+0x392>
    1128:	e6 cf       	rjmp	.-52     	; 0x10f6 <vfprintf+0x37a>
    112a:	85 e4       	ldi	r24, 0x45	; 69
    112c:	90 e0       	ldi	r25, 0x00	; 0
    112e:	b7 01       	movw	r22, r14
    1130:	0e 94 4c 0b 	call	0x1698	; 0x1698 <fputc>
    1134:	d7 fc       	sbrc	r13, 7
    1136:	06 c0       	rjmp	.+12     	; 0x1144 <vfprintf+0x3c8>
    1138:	c1 14       	cp	r12, r1
    113a:	d1 04       	cpc	r13, r1
    113c:	41 f4       	brne	.+16     	; 0x114e <vfprintf+0x3d2>
    113e:	ec 85       	ldd	r30, Y+12	; 0x0c
    1140:	e4 ff       	sbrs	r30, 4
    1142:	05 c0       	rjmp	.+10     	; 0x114e <vfprintf+0x3d2>
    1144:	d1 94       	neg	r13
    1146:	c1 94       	neg	r12
    1148:	d1 08       	sbc	r13, r1
    114a:	8d e2       	ldi	r24, 0x2D	; 45
    114c:	01 c0       	rjmp	.+2      	; 0x1150 <vfprintf+0x3d4>
    114e:	8b e2       	ldi	r24, 0x2B	; 43
    1150:	b7 01       	movw	r22, r14
    1152:	90 e0       	ldi	r25, 0x00	; 0
    1154:	0e 94 4c 0b 	call	0x1698	; 0x1698 <fputc>
    1158:	80 e3       	ldi	r24, 0x30	; 48
    115a:	2a e0       	ldi	r18, 0x0A	; 10
    115c:	c2 16       	cp	r12, r18
    115e:	d1 04       	cpc	r13, r1
    1160:	2c f0       	brlt	.+10     	; 0x116c <vfprintf+0x3f0>
    1162:	8f 5f       	subi	r24, 0xFF	; 255
    1164:	fa e0       	ldi	r31, 0x0A	; 10
    1166:	cf 1a       	sub	r12, r31
    1168:	d1 08       	sbc	r13, r1
    116a:	f7 cf       	rjmp	.-18     	; 0x115a <vfprintf+0x3de>
    116c:	b7 01       	movw	r22, r14
    116e:	90 e0       	ldi	r25, 0x00	; 0
    1170:	0e 94 4c 0b 	call	0x1698	; 0x1698 <fputc>
    1174:	b7 01       	movw	r22, r14
    1176:	c6 01       	movw	r24, r12
    1178:	c0 96       	adiw	r24, 0x30	; 48
    117a:	0e 94 4c 0b 	call	0x1698	; 0x1698 <fputc>
    117e:	54 c1       	rjmp	.+680    	; 0x1428 <vfprintf+0x6ac>
    1180:	83 36       	cpi	r24, 0x63	; 99
    1182:	31 f0       	breq	.+12     	; 0x1190 <vfprintf+0x414>
    1184:	83 37       	cpi	r24, 0x73	; 115
    1186:	79 f0       	breq	.+30     	; 0x11a6 <vfprintf+0x42a>
    1188:	83 35       	cpi	r24, 0x53	; 83
    118a:	09 f0       	breq	.+2      	; 0x118e <vfprintf+0x412>
    118c:	56 c0       	rjmp	.+172    	; 0x123a <vfprintf+0x4be>
    118e:	20 c0       	rjmp	.+64     	; 0x11d0 <vfprintf+0x454>
    1190:	56 01       	movw	r10, r12
    1192:	32 e0       	ldi	r19, 0x02	; 2
    1194:	a3 0e       	add	r10, r19
    1196:	b1 1c       	adc	r11, r1
    1198:	f6 01       	movw	r30, r12
    119a:	80 81       	ld	r24, Z
    119c:	89 83       	std	Y+1, r24	; 0x01
    119e:	01 e0       	ldi	r16, 0x01	; 1
    11a0:	10 e0       	ldi	r17, 0x00	; 0
    11a2:	63 01       	movw	r12, r6
    11a4:	12 c0       	rjmp	.+36     	; 0x11ca <vfprintf+0x44e>
    11a6:	56 01       	movw	r10, r12
    11a8:	f2 e0       	ldi	r31, 0x02	; 2
    11aa:	af 0e       	add	r10, r31
    11ac:	b1 1c       	adc	r11, r1
    11ae:	f6 01       	movw	r30, r12
    11b0:	c0 80       	ld	r12, Z
    11b2:	d1 80       	ldd	r13, Z+1	; 0x01
    11b4:	96 fe       	sbrs	r9, 6
    11b6:	03 c0       	rjmp	.+6      	; 0x11be <vfprintf+0x442>
    11b8:	61 2f       	mov	r22, r17
    11ba:	70 e0       	ldi	r23, 0x00	; 0
    11bc:	02 c0       	rjmp	.+4      	; 0x11c2 <vfprintf+0x446>
    11be:	6f ef       	ldi	r22, 0xFF	; 255
    11c0:	7f ef       	ldi	r23, 0xFF	; 255
    11c2:	c6 01       	movw	r24, r12
    11c4:	0e 94 41 0b 	call	0x1682	; 0x1682 <strnlen>
    11c8:	8c 01       	movw	r16, r24
    11ca:	f9 2d       	mov	r31, r9
    11cc:	ff 77       	andi	r31, 0x7F	; 127
    11ce:	14 c0       	rjmp	.+40     	; 0x11f8 <vfprintf+0x47c>
    11d0:	56 01       	movw	r10, r12
    11d2:	22 e0       	ldi	r18, 0x02	; 2
    11d4:	a2 0e       	add	r10, r18
    11d6:	b1 1c       	adc	r11, r1
    11d8:	f6 01       	movw	r30, r12
    11da:	c0 80       	ld	r12, Z
    11dc:	d1 80       	ldd	r13, Z+1	; 0x01
    11de:	96 fe       	sbrs	r9, 6
    11e0:	03 c0       	rjmp	.+6      	; 0x11e8 <vfprintf+0x46c>
    11e2:	61 2f       	mov	r22, r17
    11e4:	70 e0       	ldi	r23, 0x00	; 0
    11e6:	02 c0       	rjmp	.+4      	; 0x11ec <vfprintf+0x470>
    11e8:	6f ef       	ldi	r22, 0xFF	; 255
    11ea:	7f ef       	ldi	r23, 0xFF	; 255
    11ec:	c6 01       	movw	r24, r12
    11ee:	0e 94 36 0b 	call	0x166c	; 0x166c <strnlen_P>
    11f2:	8c 01       	movw	r16, r24
    11f4:	f9 2d       	mov	r31, r9
    11f6:	f0 68       	ori	r31, 0x80	; 128
    11f8:	9f 2e       	mov	r9, r31
    11fa:	f3 fd       	sbrc	r31, 3
    11fc:	1a c0       	rjmp	.+52     	; 0x1232 <vfprintf+0x4b6>
    11fe:	85 2d       	mov	r24, r5
    1200:	90 e0       	ldi	r25, 0x00	; 0
    1202:	08 17       	cp	r16, r24
    1204:	19 07       	cpc	r17, r25
    1206:	a8 f4       	brcc	.+42     	; 0x1232 <vfprintf+0x4b6>
    1208:	b7 01       	movw	r22, r14
    120a:	80 e2       	ldi	r24, 0x20	; 32
    120c:	90 e0       	ldi	r25, 0x00	; 0
    120e:	0e 94 4c 0b 	call	0x1698	; 0x1698 <fputc>
    1212:	5a 94       	dec	r5
    1214:	f4 cf       	rjmp	.-24     	; 0x11fe <vfprintf+0x482>
    1216:	f6 01       	movw	r30, r12
    1218:	97 fc       	sbrc	r9, 7
    121a:	85 91       	lpm	r24, Z+
    121c:	97 fe       	sbrs	r9, 7
    121e:	81 91       	ld	r24, Z+
    1220:	6f 01       	movw	r12, r30
    1222:	b7 01       	movw	r22, r14
    1224:	90 e0       	ldi	r25, 0x00	; 0
    1226:	0e 94 4c 0b 	call	0x1698	; 0x1698 <fputc>
    122a:	51 10       	cpse	r5, r1
    122c:	5a 94       	dec	r5
    122e:	01 50       	subi	r16, 0x01	; 1
    1230:	11 09       	sbc	r17, r1
    1232:	01 15       	cp	r16, r1
    1234:	11 05       	cpc	r17, r1
    1236:	79 f7       	brne	.-34     	; 0x1216 <vfprintf+0x49a>
    1238:	f7 c0       	rjmp	.+494    	; 0x1428 <vfprintf+0x6ac>
    123a:	84 36       	cpi	r24, 0x64	; 100
    123c:	11 f0       	breq	.+4      	; 0x1242 <vfprintf+0x4c6>
    123e:	89 36       	cpi	r24, 0x69	; 105
    1240:	61 f5       	brne	.+88     	; 0x129a <vfprintf+0x51e>
    1242:	56 01       	movw	r10, r12
    1244:	97 fe       	sbrs	r9, 7
    1246:	09 c0       	rjmp	.+18     	; 0x125a <vfprintf+0x4de>
    1248:	24 e0       	ldi	r18, 0x04	; 4
    124a:	a2 0e       	add	r10, r18
    124c:	b1 1c       	adc	r11, r1
    124e:	f6 01       	movw	r30, r12
    1250:	60 81       	ld	r22, Z
    1252:	71 81       	ldd	r23, Z+1	; 0x01
    1254:	82 81       	ldd	r24, Z+2	; 0x02
    1256:	93 81       	ldd	r25, Z+3	; 0x03
    1258:	0a c0       	rjmp	.+20     	; 0x126e <vfprintf+0x4f2>
    125a:	f2 e0       	ldi	r31, 0x02	; 2
    125c:	af 0e       	add	r10, r31
    125e:	b1 1c       	adc	r11, r1
    1260:	f6 01       	movw	r30, r12
    1262:	60 81       	ld	r22, Z
    1264:	71 81       	ldd	r23, Z+1	; 0x01
    1266:	07 2e       	mov	r0, r23
    1268:	00 0c       	add	r0, r0
    126a:	88 0b       	sbc	r24, r24
    126c:	99 0b       	sbc	r25, r25
    126e:	f9 2d       	mov	r31, r9
    1270:	ff 76       	andi	r31, 0x6F	; 111
    1272:	9f 2e       	mov	r9, r31
    1274:	97 ff       	sbrs	r25, 7
    1276:	09 c0       	rjmp	.+18     	; 0x128a <vfprintf+0x50e>
    1278:	90 95       	com	r25
    127a:	80 95       	com	r24
    127c:	70 95       	com	r23
    127e:	61 95       	neg	r22
    1280:	7f 4f       	sbci	r23, 0xFF	; 255
    1282:	8f 4f       	sbci	r24, 0xFF	; 255
    1284:	9f 4f       	sbci	r25, 0xFF	; 255
    1286:	f0 68       	ori	r31, 0x80	; 128
    1288:	9f 2e       	mov	r9, r31
    128a:	2a e0       	ldi	r18, 0x0A	; 10
    128c:	30 e0       	ldi	r19, 0x00	; 0
    128e:	a3 01       	movw	r20, r6
    1290:	0e 94 9c 0b 	call	0x1738	; 0x1738 <__ultoa_invert>
    1294:	c8 2e       	mov	r12, r24
    1296:	c6 18       	sub	r12, r6
    1298:	3f c0       	rjmp	.+126    	; 0x1318 <vfprintf+0x59c>
    129a:	09 2d       	mov	r16, r9
    129c:	85 37       	cpi	r24, 0x75	; 117
    129e:	21 f4       	brne	.+8      	; 0x12a8 <vfprintf+0x52c>
    12a0:	0f 7e       	andi	r16, 0xEF	; 239
    12a2:	2a e0       	ldi	r18, 0x0A	; 10
    12a4:	30 e0       	ldi	r19, 0x00	; 0
    12a6:	1d c0       	rjmp	.+58     	; 0x12e2 <vfprintf+0x566>
    12a8:	09 7f       	andi	r16, 0xF9	; 249
    12aa:	8f 36       	cpi	r24, 0x6F	; 111
    12ac:	91 f0       	breq	.+36     	; 0x12d2 <vfprintf+0x556>
    12ae:	18 f4       	brcc	.+6      	; 0x12b6 <vfprintf+0x53a>
    12b0:	88 35       	cpi	r24, 0x58	; 88
    12b2:	59 f0       	breq	.+22     	; 0x12ca <vfprintf+0x54e>
    12b4:	c3 c0       	rjmp	.+390    	; 0x143c <vfprintf+0x6c0>
    12b6:	80 37       	cpi	r24, 0x70	; 112
    12b8:	19 f0       	breq	.+6      	; 0x12c0 <vfprintf+0x544>
    12ba:	88 37       	cpi	r24, 0x78	; 120
    12bc:	11 f0       	breq	.+4      	; 0x12c2 <vfprintf+0x546>
    12be:	be c0       	rjmp	.+380    	; 0x143c <vfprintf+0x6c0>
    12c0:	00 61       	ori	r16, 0x10	; 16
    12c2:	04 ff       	sbrs	r16, 4
    12c4:	09 c0       	rjmp	.+18     	; 0x12d8 <vfprintf+0x55c>
    12c6:	04 60       	ori	r16, 0x04	; 4
    12c8:	07 c0       	rjmp	.+14     	; 0x12d8 <vfprintf+0x55c>
    12ca:	94 fe       	sbrs	r9, 4
    12cc:	08 c0       	rjmp	.+16     	; 0x12de <vfprintf+0x562>
    12ce:	06 60       	ori	r16, 0x06	; 6
    12d0:	06 c0       	rjmp	.+12     	; 0x12de <vfprintf+0x562>
    12d2:	28 e0       	ldi	r18, 0x08	; 8
    12d4:	30 e0       	ldi	r19, 0x00	; 0
    12d6:	05 c0       	rjmp	.+10     	; 0x12e2 <vfprintf+0x566>
    12d8:	20 e1       	ldi	r18, 0x10	; 16
    12da:	30 e0       	ldi	r19, 0x00	; 0
    12dc:	02 c0       	rjmp	.+4      	; 0x12e2 <vfprintf+0x566>
    12de:	20 e1       	ldi	r18, 0x10	; 16
    12e0:	32 e0       	ldi	r19, 0x02	; 2
    12e2:	56 01       	movw	r10, r12
    12e4:	07 ff       	sbrs	r16, 7
    12e6:	09 c0       	rjmp	.+18     	; 0x12fa <vfprintf+0x57e>
    12e8:	84 e0       	ldi	r24, 0x04	; 4
    12ea:	a8 0e       	add	r10, r24
    12ec:	b1 1c       	adc	r11, r1
    12ee:	f6 01       	movw	r30, r12
    12f0:	60 81       	ld	r22, Z
    12f2:	71 81       	ldd	r23, Z+1	; 0x01
    12f4:	82 81       	ldd	r24, Z+2	; 0x02
    12f6:	93 81       	ldd	r25, Z+3	; 0x03
    12f8:	08 c0       	rjmp	.+16     	; 0x130a <vfprintf+0x58e>
    12fa:	f2 e0       	ldi	r31, 0x02	; 2
    12fc:	af 0e       	add	r10, r31
    12fe:	b1 1c       	adc	r11, r1
    1300:	f6 01       	movw	r30, r12
    1302:	60 81       	ld	r22, Z
    1304:	71 81       	ldd	r23, Z+1	; 0x01
    1306:	80 e0       	ldi	r24, 0x00	; 0
    1308:	90 e0       	ldi	r25, 0x00	; 0
    130a:	a3 01       	movw	r20, r6
    130c:	0e 94 9c 0b 	call	0x1738	; 0x1738 <__ultoa_invert>
    1310:	c8 2e       	mov	r12, r24
    1312:	c6 18       	sub	r12, r6
    1314:	0f 77       	andi	r16, 0x7F	; 127
    1316:	90 2e       	mov	r9, r16
    1318:	96 fe       	sbrs	r9, 6
    131a:	0b c0       	rjmp	.+22     	; 0x1332 <vfprintf+0x5b6>
    131c:	09 2d       	mov	r16, r9
    131e:	0e 7f       	andi	r16, 0xFE	; 254
    1320:	c1 16       	cp	r12, r17
    1322:	50 f4       	brcc	.+20     	; 0x1338 <vfprintf+0x5bc>
    1324:	94 fe       	sbrs	r9, 4
    1326:	0a c0       	rjmp	.+20     	; 0x133c <vfprintf+0x5c0>
    1328:	92 fc       	sbrc	r9, 2
    132a:	08 c0       	rjmp	.+16     	; 0x133c <vfprintf+0x5c0>
    132c:	09 2d       	mov	r16, r9
    132e:	0e 7e       	andi	r16, 0xEE	; 238
    1330:	05 c0       	rjmp	.+10     	; 0x133c <vfprintf+0x5c0>
    1332:	dc 2c       	mov	r13, r12
    1334:	09 2d       	mov	r16, r9
    1336:	03 c0       	rjmp	.+6      	; 0x133e <vfprintf+0x5c2>
    1338:	dc 2c       	mov	r13, r12
    133a:	01 c0       	rjmp	.+2      	; 0x133e <vfprintf+0x5c2>
    133c:	d1 2e       	mov	r13, r17
    133e:	04 ff       	sbrs	r16, 4
    1340:	0d c0       	rjmp	.+26     	; 0x135c <vfprintf+0x5e0>
    1342:	fe 01       	movw	r30, r28
    1344:	ec 0d       	add	r30, r12
    1346:	f1 1d       	adc	r31, r1
    1348:	80 81       	ld	r24, Z
    134a:	80 33       	cpi	r24, 0x30	; 48
    134c:	11 f4       	brne	.+4      	; 0x1352 <vfprintf+0x5d6>
    134e:	09 7e       	andi	r16, 0xE9	; 233
    1350:	09 c0       	rjmp	.+18     	; 0x1364 <vfprintf+0x5e8>
    1352:	02 ff       	sbrs	r16, 2
    1354:	06 c0       	rjmp	.+12     	; 0x1362 <vfprintf+0x5e6>
    1356:	d3 94       	inc	r13
    1358:	d3 94       	inc	r13
    135a:	04 c0       	rjmp	.+8      	; 0x1364 <vfprintf+0x5e8>
    135c:	80 2f       	mov	r24, r16
    135e:	86 78       	andi	r24, 0x86	; 134
    1360:	09 f0       	breq	.+2      	; 0x1364 <vfprintf+0x5e8>
    1362:	d3 94       	inc	r13
    1364:	03 fd       	sbrc	r16, 3
    1366:	11 c0       	rjmp	.+34     	; 0x138a <vfprintf+0x60e>
    1368:	00 ff       	sbrs	r16, 0
    136a:	06 c0       	rjmp	.+12     	; 0x1378 <vfprintf+0x5fc>
    136c:	1c 2d       	mov	r17, r12
    136e:	d5 14       	cp	r13, r5
    1370:	80 f4       	brcc	.+32     	; 0x1392 <vfprintf+0x616>
    1372:	15 0d       	add	r17, r5
    1374:	1d 19       	sub	r17, r13
    1376:	0d c0       	rjmp	.+26     	; 0x1392 <vfprintf+0x616>
    1378:	d5 14       	cp	r13, r5
    137a:	58 f4       	brcc	.+22     	; 0x1392 <vfprintf+0x616>
    137c:	b7 01       	movw	r22, r14
    137e:	80 e2       	ldi	r24, 0x20	; 32
    1380:	90 e0       	ldi	r25, 0x00	; 0
    1382:	0e 94 4c 0b 	call	0x1698	; 0x1698 <fputc>
    1386:	d3 94       	inc	r13
    1388:	f7 cf       	rjmp	.-18     	; 0x1378 <vfprintf+0x5fc>
    138a:	d5 14       	cp	r13, r5
    138c:	10 f4       	brcc	.+4      	; 0x1392 <vfprintf+0x616>
    138e:	5d 18       	sub	r5, r13
    1390:	01 c0       	rjmp	.+2      	; 0x1394 <vfprintf+0x618>
    1392:	51 2c       	mov	r5, r1
    1394:	04 ff       	sbrs	r16, 4
    1396:	10 c0       	rjmp	.+32     	; 0x13b8 <vfprintf+0x63c>
    1398:	b7 01       	movw	r22, r14
    139a:	80 e3       	ldi	r24, 0x30	; 48
    139c:	90 e0       	ldi	r25, 0x00	; 0
    139e:	0e 94 4c 0b 	call	0x1698	; 0x1698 <fputc>
    13a2:	02 ff       	sbrs	r16, 2
    13a4:	17 c0       	rjmp	.+46     	; 0x13d4 <vfprintf+0x658>
    13a6:	01 fd       	sbrc	r16, 1
    13a8:	03 c0       	rjmp	.+6      	; 0x13b0 <vfprintf+0x634>
    13aa:	88 e7       	ldi	r24, 0x78	; 120
    13ac:	90 e0       	ldi	r25, 0x00	; 0
    13ae:	02 c0       	rjmp	.+4      	; 0x13b4 <vfprintf+0x638>
    13b0:	88 e5       	ldi	r24, 0x58	; 88
    13b2:	90 e0       	ldi	r25, 0x00	; 0
    13b4:	b7 01       	movw	r22, r14
    13b6:	0c c0       	rjmp	.+24     	; 0x13d0 <vfprintf+0x654>
    13b8:	80 2f       	mov	r24, r16
    13ba:	86 78       	andi	r24, 0x86	; 134
    13bc:	59 f0       	breq	.+22     	; 0x13d4 <vfprintf+0x658>
    13be:	01 ff       	sbrs	r16, 1
    13c0:	02 c0       	rjmp	.+4      	; 0x13c6 <vfprintf+0x64a>
    13c2:	8b e2       	ldi	r24, 0x2B	; 43
    13c4:	01 c0       	rjmp	.+2      	; 0x13c8 <vfprintf+0x64c>
    13c6:	80 e2       	ldi	r24, 0x20	; 32
    13c8:	07 fd       	sbrc	r16, 7
    13ca:	8d e2       	ldi	r24, 0x2D	; 45
    13cc:	b7 01       	movw	r22, r14
    13ce:	90 e0       	ldi	r25, 0x00	; 0
    13d0:	0e 94 4c 0b 	call	0x1698	; 0x1698 <fputc>
    13d4:	c1 16       	cp	r12, r17
    13d6:	38 f4       	brcc	.+14     	; 0x13e6 <vfprintf+0x66a>
    13d8:	b7 01       	movw	r22, r14
    13da:	80 e3       	ldi	r24, 0x30	; 48
    13dc:	90 e0       	ldi	r25, 0x00	; 0
    13de:	0e 94 4c 0b 	call	0x1698	; 0x1698 <fputc>
    13e2:	11 50       	subi	r17, 0x01	; 1
    13e4:	f7 cf       	rjmp	.-18     	; 0x13d4 <vfprintf+0x658>
    13e6:	ca 94       	dec	r12
    13e8:	f3 01       	movw	r30, r6
    13ea:	ec 0d       	add	r30, r12
    13ec:	f1 1d       	adc	r31, r1
    13ee:	80 81       	ld	r24, Z
    13f0:	b7 01       	movw	r22, r14
    13f2:	90 e0       	ldi	r25, 0x00	; 0
    13f4:	0e 94 4c 0b 	call	0x1698	; 0x1698 <fputc>
    13f8:	c1 10       	cpse	r12, r1
    13fa:	f5 cf       	rjmp	.-22     	; 0x13e6 <vfprintf+0x66a>
    13fc:	15 c0       	rjmp	.+42     	; 0x1428 <vfprintf+0x6ac>
    13fe:	f4 e0       	ldi	r31, 0x04	; 4
    1400:	f5 15       	cp	r31, r5
    1402:	60 f5       	brcc	.+88     	; 0x145c <vfprintf+0x6e0>
    1404:	84 e0       	ldi	r24, 0x04	; 4
    1406:	58 1a       	sub	r5, r24
    1408:	93 fe       	sbrs	r9, 3
    140a:	1f c0       	rjmp	.+62     	; 0x144a <vfprintf+0x6ce>
    140c:	01 11       	cpse	r16, r1
    140e:	27 c0       	rjmp	.+78     	; 0x145e <vfprintf+0x6e2>
    1410:	2c 85       	ldd	r18, Y+12	; 0x0c
    1412:	23 ff       	sbrs	r18, 3
    1414:	2a c0       	rjmp	.+84     	; 0x146a <vfprintf+0x6ee>
    1416:	04 e0       	ldi	r16, 0x04	; 4
    1418:	12 e0       	ldi	r17, 0x02	; 2
    141a:	39 2d       	mov	r19, r9
    141c:	30 71       	andi	r19, 0x10	; 16
    141e:	93 2e       	mov	r9, r19
    1420:	f8 01       	movw	r30, r16
    1422:	84 91       	lpm	r24, Z
    1424:	81 11       	cpse	r24, r1
    1426:	24 c0       	rjmp	.+72     	; 0x1470 <vfprintf+0x6f4>
    1428:	55 20       	and	r5, r5
    142a:	09 f4       	brne	.+2      	; 0x142e <vfprintf+0x6b2>
    142c:	e4 cc       	rjmp	.-1592   	; 0xdf6 <vfprintf+0x7a>
    142e:	b7 01       	movw	r22, r14
    1430:	80 e2       	ldi	r24, 0x20	; 32
    1432:	90 e0       	ldi	r25, 0x00	; 0
    1434:	0e 94 4c 0b 	call	0x1698	; 0x1698 <fputc>
    1438:	5a 94       	dec	r5
    143a:	f6 cf       	rjmp	.-20     	; 0x1428 <vfprintf+0x6ac>
    143c:	f7 01       	movw	r30, r14
    143e:	86 81       	ldd	r24, Z+6	; 0x06
    1440:	97 81       	ldd	r25, Z+7	; 0x07
    1442:	26 c0       	rjmp	.+76     	; 0x1490 <vfprintf+0x714>
    1444:	8f ef       	ldi	r24, 0xFF	; 255
    1446:	9f ef       	ldi	r25, 0xFF	; 255
    1448:	23 c0       	rjmp	.+70     	; 0x1490 <vfprintf+0x714>
    144a:	b7 01       	movw	r22, r14
    144c:	80 e2       	ldi	r24, 0x20	; 32
    144e:	90 e0       	ldi	r25, 0x00	; 0
    1450:	0e 94 4c 0b 	call	0x1698	; 0x1698 <fputc>
    1454:	5a 94       	dec	r5
    1456:	51 10       	cpse	r5, r1
    1458:	f8 cf       	rjmp	.-16     	; 0x144a <vfprintf+0x6ce>
    145a:	d8 cf       	rjmp	.-80     	; 0x140c <vfprintf+0x690>
    145c:	51 2c       	mov	r5, r1
    145e:	b7 01       	movw	r22, r14
    1460:	80 2f       	mov	r24, r16
    1462:	90 e0       	ldi	r25, 0x00	; 0
    1464:	0e 94 4c 0b 	call	0x1698	; 0x1698 <fputc>
    1468:	d3 cf       	rjmp	.-90     	; 0x1410 <vfprintf+0x694>
    146a:	08 e0       	ldi	r16, 0x08	; 8
    146c:	12 e0       	ldi	r17, 0x02	; 2
    146e:	d5 cf       	rjmp	.-86     	; 0x141a <vfprintf+0x69e>
    1470:	91 10       	cpse	r9, r1
    1472:	80 52       	subi	r24, 0x20	; 32
    1474:	b7 01       	movw	r22, r14
    1476:	90 e0       	ldi	r25, 0x00	; 0
    1478:	0e 94 4c 0b 	call	0x1698	; 0x1698 <fputc>
    147c:	0f 5f       	subi	r16, 0xFF	; 255
    147e:	1f 4f       	sbci	r17, 0xFF	; 255
    1480:	cf cf       	rjmp	.-98     	; 0x1420 <vfprintf+0x6a4>
    1482:	23 e0       	ldi	r18, 0x03	; 3
    1484:	25 15       	cp	r18, r5
    1486:	10 f4       	brcc	.+4      	; 0x148c <vfprintf+0x710>
    1488:	83 e0       	ldi	r24, 0x03	; 3
    148a:	bd cf       	rjmp	.-134    	; 0x1406 <vfprintf+0x68a>
    148c:	51 2c       	mov	r5, r1
    148e:	c0 cf       	rjmp	.-128    	; 0x1410 <vfprintf+0x694>
    1490:	60 96       	adiw	r28, 0x10	; 16
    1492:	cd bf       	out	0x3d, r28	; 61
    1494:	de bf       	out	0x3e, r29	; 62
    1496:	df 91       	pop	r29
    1498:	cf 91       	pop	r28
    149a:	1f 91       	pop	r17
    149c:	0f 91       	pop	r16
    149e:	ff 90       	pop	r15
    14a0:	ef 90       	pop	r14
    14a2:	df 90       	pop	r13
    14a4:	cf 90       	pop	r12
    14a6:	bf 90       	pop	r11
    14a8:	af 90       	pop	r10
    14aa:	9f 90       	pop	r9
    14ac:	8f 90       	pop	r8
    14ae:	7f 90       	pop	r7
    14b0:	6f 90       	pop	r6
    14b2:	5f 90       	pop	r5
    14b4:	4f 90       	pop	r4
    14b6:	3f 90       	pop	r3
    14b8:	2f 90       	pop	r2
    14ba:	08 95       	ret

000014bc <__ftoa_engine>:
    14bc:	28 30       	cpi	r18, 0x08	; 8
    14be:	08 f0       	brcs	.+2      	; 0x14c2 <__ftoa_engine+0x6>
    14c0:	27 e0       	ldi	r18, 0x07	; 7
    14c2:	33 27       	eor	r19, r19
    14c4:	da 01       	movw	r26, r20
    14c6:	99 0f       	add	r25, r25
    14c8:	31 1d       	adc	r19, r1
    14ca:	87 fd       	sbrc	r24, 7
    14cc:	91 60       	ori	r25, 0x01	; 1
    14ce:	00 96       	adiw	r24, 0x00	; 0
    14d0:	61 05       	cpc	r22, r1
    14d2:	71 05       	cpc	r23, r1
    14d4:	39 f4       	brne	.+14     	; 0x14e4 <__ftoa_engine+0x28>
    14d6:	32 60       	ori	r19, 0x02	; 2
    14d8:	2e 5f       	subi	r18, 0xFE	; 254
    14da:	3d 93       	st	X+, r19
    14dc:	30 e3       	ldi	r19, 0x30	; 48
    14de:	2a 95       	dec	r18
    14e0:	e1 f7       	brne	.-8      	; 0x14da <__ftoa_engine+0x1e>
    14e2:	08 95       	ret
    14e4:	9f 3f       	cpi	r25, 0xFF	; 255
    14e6:	30 f0       	brcs	.+12     	; 0x14f4 <__ftoa_engine+0x38>
    14e8:	80 38       	cpi	r24, 0x80	; 128
    14ea:	71 05       	cpc	r23, r1
    14ec:	61 05       	cpc	r22, r1
    14ee:	09 f0       	breq	.+2      	; 0x14f2 <__ftoa_engine+0x36>
    14f0:	3c 5f       	subi	r19, 0xFC	; 252
    14f2:	3c 5f       	subi	r19, 0xFC	; 252
    14f4:	3d 93       	st	X+, r19
    14f6:	91 30       	cpi	r25, 0x01	; 1
    14f8:	08 f0       	brcs	.+2      	; 0x14fc <__ftoa_engine+0x40>
    14fa:	80 68       	ori	r24, 0x80	; 128
    14fc:	91 1d       	adc	r25, r1
    14fe:	df 93       	push	r29
    1500:	cf 93       	push	r28
    1502:	1f 93       	push	r17
    1504:	0f 93       	push	r16
    1506:	ff 92       	push	r15
    1508:	ef 92       	push	r14
    150a:	19 2f       	mov	r17, r25
    150c:	98 7f       	andi	r25, 0xF8	; 248
    150e:	96 95       	lsr	r25
    1510:	e9 2f       	mov	r30, r25
    1512:	96 95       	lsr	r25
    1514:	96 95       	lsr	r25
    1516:	e9 0f       	add	r30, r25
    1518:	ff 27       	eor	r31, r31
    151a:	ea 59       	subi	r30, 0x9A	; 154
    151c:	fd 4f       	sbci	r31, 0xFD	; 253
    151e:	99 27       	eor	r25, r25
    1520:	33 27       	eor	r19, r19
    1522:	ee 24       	eor	r14, r14
    1524:	ff 24       	eor	r15, r15
    1526:	a7 01       	movw	r20, r14
    1528:	e7 01       	movw	r28, r14
    152a:	05 90       	lpm	r0, Z+
    152c:	08 94       	sec
    152e:	07 94       	ror	r0
    1530:	28 f4       	brcc	.+10     	; 0x153c <__ftoa_engine+0x80>
    1532:	36 0f       	add	r19, r22
    1534:	e7 1e       	adc	r14, r23
    1536:	f8 1e       	adc	r15, r24
    1538:	49 1f       	adc	r20, r25
    153a:	51 1d       	adc	r21, r1
    153c:	66 0f       	add	r22, r22
    153e:	77 1f       	adc	r23, r23
    1540:	88 1f       	adc	r24, r24
    1542:	99 1f       	adc	r25, r25
    1544:	06 94       	lsr	r0
    1546:	a1 f7       	brne	.-24     	; 0x1530 <__ftoa_engine+0x74>
    1548:	05 90       	lpm	r0, Z+
    154a:	07 94       	ror	r0
    154c:	28 f4       	brcc	.+10     	; 0x1558 <__ftoa_engine+0x9c>
    154e:	e7 0e       	add	r14, r23
    1550:	f8 1e       	adc	r15, r24
    1552:	49 1f       	adc	r20, r25
    1554:	56 1f       	adc	r21, r22
    1556:	c1 1d       	adc	r28, r1
    1558:	77 0f       	add	r23, r23
    155a:	88 1f       	adc	r24, r24
    155c:	99 1f       	adc	r25, r25
    155e:	66 1f       	adc	r22, r22
    1560:	06 94       	lsr	r0
    1562:	a1 f7       	brne	.-24     	; 0x154c <__ftoa_engine+0x90>
    1564:	05 90       	lpm	r0, Z+
    1566:	07 94       	ror	r0
    1568:	28 f4       	brcc	.+10     	; 0x1574 <__ftoa_engine+0xb8>
    156a:	f8 0e       	add	r15, r24
    156c:	49 1f       	adc	r20, r25
    156e:	56 1f       	adc	r21, r22
    1570:	c7 1f       	adc	r28, r23
    1572:	d1 1d       	adc	r29, r1
    1574:	88 0f       	add	r24, r24
    1576:	99 1f       	adc	r25, r25
    1578:	66 1f       	adc	r22, r22
    157a:	77 1f       	adc	r23, r23
    157c:	06 94       	lsr	r0
    157e:	a1 f7       	brne	.-24     	; 0x1568 <__ftoa_engine+0xac>
    1580:	05 90       	lpm	r0, Z+
    1582:	07 94       	ror	r0
    1584:	20 f4       	brcc	.+8      	; 0x158e <__ftoa_engine+0xd2>
    1586:	49 0f       	add	r20, r25
    1588:	56 1f       	adc	r21, r22
    158a:	c7 1f       	adc	r28, r23
    158c:	d8 1f       	adc	r29, r24
    158e:	99 0f       	add	r25, r25
    1590:	66 1f       	adc	r22, r22
    1592:	77 1f       	adc	r23, r23
    1594:	88 1f       	adc	r24, r24
    1596:	06 94       	lsr	r0
    1598:	a9 f7       	brne	.-22     	; 0x1584 <__ftoa_engine+0xc8>
    159a:	84 91       	lpm	r24, Z
    159c:	10 95       	com	r17
    159e:	17 70       	andi	r17, 0x07	; 7
    15a0:	41 f0       	breq	.+16     	; 0x15b2 <__ftoa_engine+0xf6>
    15a2:	d6 95       	lsr	r29
    15a4:	c7 95       	ror	r28
    15a6:	57 95       	ror	r21
    15a8:	47 95       	ror	r20
    15aa:	f7 94       	ror	r15
    15ac:	e7 94       	ror	r14
    15ae:	1a 95       	dec	r17
    15b0:	c1 f7       	brne	.-16     	; 0x15a2 <__ftoa_engine+0xe6>
    15b2:	ec e0       	ldi	r30, 0x0C	; 12
    15b4:	f2 e0       	ldi	r31, 0x02	; 2
    15b6:	68 94       	set
    15b8:	15 90       	lpm	r1, Z+
    15ba:	15 91       	lpm	r17, Z+
    15bc:	35 91       	lpm	r19, Z+
    15be:	65 91       	lpm	r22, Z+
    15c0:	95 91       	lpm	r25, Z+
    15c2:	05 90       	lpm	r0, Z+
    15c4:	7f e2       	ldi	r23, 0x2F	; 47
    15c6:	73 95       	inc	r23
    15c8:	e1 18       	sub	r14, r1
    15ca:	f1 0a       	sbc	r15, r17
    15cc:	43 0b       	sbc	r20, r19
    15ce:	56 0b       	sbc	r21, r22
    15d0:	c9 0b       	sbc	r28, r25
    15d2:	d0 09       	sbc	r29, r0
    15d4:	c0 f7       	brcc	.-16     	; 0x15c6 <__ftoa_engine+0x10a>
    15d6:	e1 0c       	add	r14, r1
    15d8:	f1 1e       	adc	r15, r17
    15da:	43 1f       	adc	r20, r19
    15dc:	56 1f       	adc	r21, r22
    15de:	c9 1f       	adc	r28, r25
    15e0:	d0 1d       	adc	r29, r0
    15e2:	7e f4       	brtc	.+30     	; 0x1602 <__ftoa_engine+0x146>
    15e4:	70 33       	cpi	r23, 0x30	; 48
    15e6:	11 f4       	brne	.+4      	; 0x15ec <__ftoa_engine+0x130>
    15e8:	8a 95       	dec	r24
    15ea:	e6 cf       	rjmp	.-52     	; 0x15b8 <__ftoa_engine+0xfc>
    15ec:	e8 94       	clt
    15ee:	01 50       	subi	r16, 0x01	; 1
    15f0:	30 f0       	brcs	.+12     	; 0x15fe <__ftoa_engine+0x142>
    15f2:	08 0f       	add	r16, r24
    15f4:	0a f4       	brpl	.+2      	; 0x15f8 <__ftoa_engine+0x13c>
    15f6:	00 27       	eor	r16, r16
    15f8:	02 17       	cp	r16, r18
    15fa:	08 f4       	brcc	.+2      	; 0x15fe <__ftoa_engine+0x142>
    15fc:	20 2f       	mov	r18, r16
    15fe:	23 95       	inc	r18
    1600:	02 2f       	mov	r16, r18
    1602:	7a 33       	cpi	r23, 0x3A	; 58
    1604:	28 f0       	brcs	.+10     	; 0x1610 <__ftoa_engine+0x154>
    1606:	79 e3       	ldi	r23, 0x39	; 57
    1608:	7d 93       	st	X+, r23
    160a:	2a 95       	dec	r18
    160c:	e9 f7       	brne	.-6      	; 0x1608 <__ftoa_engine+0x14c>
    160e:	10 c0       	rjmp	.+32     	; 0x1630 <__ftoa_engine+0x174>
    1610:	7d 93       	st	X+, r23
    1612:	2a 95       	dec	r18
    1614:	89 f6       	brne	.-94     	; 0x15b8 <__ftoa_engine+0xfc>
    1616:	06 94       	lsr	r0
    1618:	97 95       	ror	r25
    161a:	67 95       	ror	r22
    161c:	37 95       	ror	r19
    161e:	17 95       	ror	r17
    1620:	17 94       	ror	r1
    1622:	e1 18       	sub	r14, r1
    1624:	f1 0a       	sbc	r15, r17
    1626:	43 0b       	sbc	r20, r19
    1628:	56 0b       	sbc	r21, r22
    162a:	c9 0b       	sbc	r28, r25
    162c:	d0 09       	sbc	r29, r0
    162e:	98 f0       	brcs	.+38     	; 0x1656 <__ftoa_engine+0x19a>
    1630:	23 95       	inc	r18
    1632:	7e 91       	ld	r23, -X
    1634:	73 95       	inc	r23
    1636:	7a 33       	cpi	r23, 0x3A	; 58
    1638:	08 f0       	brcs	.+2      	; 0x163c <__ftoa_engine+0x180>
    163a:	70 e3       	ldi	r23, 0x30	; 48
    163c:	7c 93       	st	X, r23
    163e:	20 13       	cpse	r18, r16
    1640:	b8 f7       	brcc	.-18     	; 0x1630 <__ftoa_engine+0x174>
    1642:	7e 91       	ld	r23, -X
    1644:	70 61       	ori	r23, 0x10	; 16
    1646:	7d 93       	st	X+, r23
    1648:	30 f0       	brcs	.+12     	; 0x1656 <__ftoa_engine+0x19a>
    164a:	83 95       	inc	r24
    164c:	71 e3       	ldi	r23, 0x31	; 49
    164e:	7d 93       	st	X+, r23
    1650:	70 e3       	ldi	r23, 0x30	; 48
    1652:	2a 95       	dec	r18
    1654:	e1 f7       	brne	.-8      	; 0x164e <__ftoa_engine+0x192>
    1656:	11 24       	eor	r1, r1
    1658:	ef 90       	pop	r14
    165a:	ff 90       	pop	r15
    165c:	0f 91       	pop	r16
    165e:	1f 91       	pop	r17
    1660:	cf 91       	pop	r28
    1662:	df 91       	pop	r29
    1664:	99 27       	eor	r25, r25
    1666:	87 fd       	sbrc	r24, 7
    1668:	90 95       	com	r25
    166a:	08 95       	ret

0000166c <strnlen_P>:
    166c:	fc 01       	movw	r30, r24
    166e:	05 90       	lpm	r0, Z+
    1670:	61 50       	subi	r22, 0x01	; 1
    1672:	70 40       	sbci	r23, 0x00	; 0
    1674:	01 10       	cpse	r0, r1
    1676:	d8 f7       	brcc	.-10     	; 0x166e <strnlen_P+0x2>
    1678:	80 95       	com	r24
    167a:	90 95       	com	r25
    167c:	8e 0f       	add	r24, r30
    167e:	9f 1f       	adc	r25, r31
    1680:	08 95       	ret

00001682 <strnlen>:
    1682:	fc 01       	movw	r30, r24
    1684:	61 50       	subi	r22, 0x01	; 1
    1686:	70 40       	sbci	r23, 0x00	; 0
    1688:	01 90       	ld	r0, Z+
    168a:	01 10       	cpse	r0, r1
    168c:	d8 f7       	brcc	.-10     	; 0x1684 <strnlen+0x2>
    168e:	80 95       	com	r24
    1690:	90 95       	com	r25
    1692:	8e 0f       	add	r24, r30
    1694:	9f 1f       	adc	r25, r31
    1696:	08 95       	ret

00001698 <fputc>:
    1698:	0f 93       	push	r16
    169a:	1f 93       	push	r17
    169c:	cf 93       	push	r28
    169e:	df 93       	push	r29
    16a0:	fb 01       	movw	r30, r22
    16a2:	23 81       	ldd	r18, Z+3	; 0x03
    16a4:	21 fd       	sbrc	r18, 1
    16a6:	03 c0       	rjmp	.+6      	; 0x16ae <fputc+0x16>
    16a8:	8f ef       	ldi	r24, 0xFF	; 255
    16aa:	9f ef       	ldi	r25, 0xFF	; 255
    16ac:	2c c0       	rjmp	.+88     	; 0x1706 <fputc+0x6e>
    16ae:	22 ff       	sbrs	r18, 2
    16b0:	16 c0       	rjmp	.+44     	; 0x16de <fputc+0x46>
    16b2:	46 81       	ldd	r20, Z+6	; 0x06
    16b4:	57 81       	ldd	r21, Z+7	; 0x07
    16b6:	24 81       	ldd	r18, Z+4	; 0x04
    16b8:	35 81       	ldd	r19, Z+5	; 0x05
    16ba:	42 17       	cp	r20, r18
    16bc:	53 07       	cpc	r21, r19
    16be:	44 f4       	brge	.+16     	; 0x16d0 <fputc+0x38>
    16c0:	a0 81       	ld	r26, Z
    16c2:	b1 81       	ldd	r27, Z+1	; 0x01
    16c4:	9d 01       	movw	r18, r26
    16c6:	2f 5f       	subi	r18, 0xFF	; 255
    16c8:	3f 4f       	sbci	r19, 0xFF	; 255
    16ca:	20 83       	st	Z, r18
    16cc:	31 83       	std	Z+1, r19	; 0x01
    16ce:	8c 93       	st	X, r24
    16d0:	26 81       	ldd	r18, Z+6	; 0x06
    16d2:	37 81       	ldd	r19, Z+7	; 0x07
    16d4:	2f 5f       	subi	r18, 0xFF	; 255
    16d6:	3f 4f       	sbci	r19, 0xFF	; 255
    16d8:	26 83       	std	Z+6, r18	; 0x06
    16da:	37 83       	std	Z+7, r19	; 0x07
    16dc:	14 c0       	rjmp	.+40     	; 0x1706 <fputc+0x6e>
    16de:	8b 01       	movw	r16, r22
    16e0:	ec 01       	movw	r28, r24
    16e2:	fb 01       	movw	r30, r22
    16e4:	00 84       	ldd	r0, Z+8	; 0x08
    16e6:	f1 85       	ldd	r31, Z+9	; 0x09
    16e8:	e0 2d       	mov	r30, r0
    16ea:	19 95       	eicall
    16ec:	89 2b       	or	r24, r25
    16ee:	e1 f6       	brne	.-72     	; 0x16a8 <fputc+0x10>
    16f0:	d8 01       	movw	r26, r16
    16f2:	16 96       	adiw	r26, 0x06	; 6
    16f4:	8d 91       	ld	r24, X+
    16f6:	9c 91       	ld	r25, X
    16f8:	17 97       	sbiw	r26, 0x07	; 7
    16fa:	01 96       	adiw	r24, 0x01	; 1
    16fc:	16 96       	adiw	r26, 0x06	; 6
    16fe:	8d 93       	st	X+, r24
    1700:	9c 93       	st	X, r25
    1702:	17 97       	sbiw	r26, 0x07	; 7
    1704:	ce 01       	movw	r24, r28
    1706:	df 91       	pop	r29
    1708:	cf 91       	pop	r28
    170a:	1f 91       	pop	r17
    170c:	0f 91       	pop	r16
    170e:	08 95       	ret

00001710 <printf>:
    1710:	cf 93       	push	r28
    1712:	df 93       	push	r29
    1714:	cd b7       	in	r28, 0x3d	; 61
    1716:	de b7       	in	r29, 0x3e	; 62
    1718:	ae 01       	movw	r20, r28
    171a:	4a 5f       	subi	r20, 0xFA	; 250
    171c:	5f 4f       	sbci	r21, 0xFF	; 255
    171e:	fa 01       	movw	r30, r20
    1720:	61 91       	ld	r22, Z+
    1722:	71 91       	ld	r23, Z+
    1724:	af 01       	movw	r20, r30
    1726:	80 91 fe 20 	lds	r24, 0x20FE	; 0x8020fe <__iob+0x2>
    172a:	90 91 ff 20 	lds	r25, 0x20FF	; 0x8020ff <__iob+0x3>
    172e:	0e 94 be 06 	call	0xd7c	; 0xd7c <vfprintf>
    1732:	df 91       	pop	r29
    1734:	cf 91       	pop	r28
    1736:	08 95       	ret

00001738 <__ultoa_invert>:
    1738:	fa 01       	movw	r30, r20
    173a:	aa 27       	eor	r26, r26
    173c:	28 30       	cpi	r18, 0x08	; 8
    173e:	51 f1       	breq	.+84     	; 0x1794 <__ultoa_invert+0x5c>
    1740:	20 31       	cpi	r18, 0x10	; 16
    1742:	81 f1       	breq	.+96     	; 0x17a4 <__ultoa_invert+0x6c>
    1744:	e8 94       	clt
    1746:	6f 93       	push	r22
    1748:	6e 7f       	andi	r22, 0xFE	; 254
    174a:	6e 5f       	subi	r22, 0xFE	; 254
    174c:	7f 4f       	sbci	r23, 0xFF	; 255
    174e:	8f 4f       	sbci	r24, 0xFF	; 255
    1750:	9f 4f       	sbci	r25, 0xFF	; 255
    1752:	af 4f       	sbci	r26, 0xFF	; 255
    1754:	b1 e0       	ldi	r27, 0x01	; 1
    1756:	3e d0       	rcall	.+124    	; 0x17d4 <__ultoa_invert+0x9c>
    1758:	b4 e0       	ldi	r27, 0x04	; 4
    175a:	3c d0       	rcall	.+120    	; 0x17d4 <__ultoa_invert+0x9c>
    175c:	67 0f       	add	r22, r23
    175e:	78 1f       	adc	r23, r24
    1760:	89 1f       	adc	r24, r25
    1762:	9a 1f       	adc	r25, r26
    1764:	a1 1d       	adc	r26, r1
    1766:	68 0f       	add	r22, r24
    1768:	79 1f       	adc	r23, r25
    176a:	8a 1f       	adc	r24, r26
    176c:	91 1d       	adc	r25, r1
    176e:	a1 1d       	adc	r26, r1
    1770:	6a 0f       	add	r22, r26
    1772:	71 1d       	adc	r23, r1
    1774:	81 1d       	adc	r24, r1
    1776:	91 1d       	adc	r25, r1
    1778:	a1 1d       	adc	r26, r1
    177a:	20 d0       	rcall	.+64     	; 0x17bc <__ultoa_invert+0x84>
    177c:	09 f4       	brne	.+2      	; 0x1780 <__ultoa_invert+0x48>
    177e:	68 94       	set
    1780:	3f 91       	pop	r19
    1782:	2a e0       	ldi	r18, 0x0A	; 10
    1784:	26 9f       	mul	r18, r22
    1786:	11 24       	eor	r1, r1
    1788:	30 19       	sub	r19, r0
    178a:	30 5d       	subi	r19, 0xD0	; 208
    178c:	31 93       	st	Z+, r19
    178e:	de f6       	brtc	.-74     	; 0x1746 <__ultoa_invert+0xe>
    1790:	cf 01       	movw	r24, r30
    1792:	08 95       	ret
    1794:	46 2f       	mov	r20, r22
    1796:	47 70       	andi	r20, 0x07	; 7
    1798:	40 5d       	subi	r20, 0xD0	; 208
    179a:	41 93       	st	Z+, r20
    179c:	b3 e0       	ldi	r27, 0x03	; 3
    179e:	0f d0       	rcall	.+30     	; 0x17be <__ultoa_invert+0x86>
    17a0:	c9 f7       	brne	.-14     	; 0x1794 <__ultoa_invert+0x5c>
    17a2:	f6 cf       	rjmp	.-20     	; 0x1790 <__ultoa_invert+0x58>
    17a4:	46 2f       	mov	r20, r22
    17a6:	4f 70       	andi	r20, 0x0F	; 15
    17a8:	40 5d       	subi	r20, 0xD0	; 208
    17aa:	4a 33       	cpi	r20, 0x3A	; 58
    17ac:	18 f0       	brcs	.+6      	; 0x17b4 <__ultoa_invert+0x7c>
    17ae:	49 5d       	subi	r20, 0xD9	; 217
    17b0:	31 fd       	sbrc	r19, 1
    17b2:	40 52       	subi	r20, 0x20	; 32
    17b4:	41 93       	st	Z+, r20
    17b6:	02 d0       	rcall	.+4      	; 0x17bc <__ultoa_invert+0x84>
    17b8:	a9 f7       	brne	.-22     	; 0x17a4 <__ultoa_invert+0x6c>
    17ba:	ea cf       	rjmp	.-44     	; 0x1790 <__ultoa_invert+0x58>
    17bc:	b4 e0       	ldi	r27, 0x04	; 4
    17be:	a6 95       	lsr	r26
    17c0:	97 95       	ror	r25
    17c2:	87 95       	ror	r24
    17c4:	77 95       	ror	r23
    17c6:	67 95       	ror	r22
    17c8:	ba 95       	dec	r27
    17ca:	c9 f7       	brne	.-14     	; 0x17be <__ultoa_invert+0x86>
    17cc:	00 97       	sbiw	r24, 0x00	; 0
    17ce:	61 05       	cpc	r22, r1
    17d0:	71 05       	cpc	r23, r1
    17d2:	08 95       	ret
    17d4:	9b 01       	movw	r18, r22
    17d6:	ac 01       	movw	r20, r24
    17d8:	0a 2e       	mov	r0, r26
    17da:	06 94       	lsr	r0
    17dc:	57 95       	ror	r21
    17de:	47 95       	ror	r20
    17e0:	37 95       	ror	r19
    17e2:	27 95       	ror	r18
    17e4:	ba 95       	dec	r27
    17e6:	c9 f7       	brne	.-14     	; 0x17da <__ultoa_invert+0xa2>
    17e8:	62 0f       	add	r22, r18
    17ea:	73 1f       	adc	r23, r19
    17ec:	84 1f       	adc	r24, r20
    17ee:	95 1f       	adc	r25, r21
    17f0:	a0 1d       	adc	r26, r0
    17f2:	08 95       	ret

000017f4 <_exit>:
    17f4:	f8 94       	cli

000017f6 <__stop_program>:
    17f6:	ff cf       	rjmp	.-2      	; 0x17f6 <__stop_program>
